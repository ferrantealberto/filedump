
╔══════════════════════════════════════════════════════════════════════════════╗
║                              PLUGIN DUMP REPORT                             ║
╠══════════════════════════════════════════════════════════════════════════════╣
║ Plugin: qrcode
║ Generato: 2025-08-18 17:43:32
║ Path: /var/www/vhosts/weblabfactory.it/httpdocs/qrcode
║ Totale file: 15
║ Totale directory: 0
║ Dimensione totale: 167.16 MB
╚══════════════════════════════════════════════════════════════════════════════╝


================================================================================
STRUTTURA DIRECTORY
================================================================================

├── campagneqr.html
├── email-processor.php
├── email_processor.log
├── index.html
├── plugin-dumper.php
├── processed_emails.txt
├── send-welcome-advanced.php
├── send-welcome-auto.php
├── send-welcome.php
├── send-welcome.php_
├── send_log.json
├── test-extraction.php
├── webhook-receiver.php
├── webhook_debug.log
└── whatsapp_numbers.json


================================================================================
CONTENUTO FILE
================================================================================


--------------------------------------------------------------------------------
FILE: campagneqr.html
SIZE: 30.98 KB
MODIFIED: 2025-08-13 22:17:23
--------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>QR Code WhatsApp Generator Pro</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js" 
            onerror="loadFallbackQR()"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            animation: slideIn 0.5s ease-out;
        }

        @keyframes slideIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .card {
            background: white;
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.1);
        }

        h1 {
            color: #333;
            margin-bottom: 30px;
            font-size: 28px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        h1::before {
            content: "📱";
            font-size: 32px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #555;
            font-weight: 500;
            font-size: 14px;
        }

        .required {
            color: #e74c3c;
        }

        .field-hint {
            font-size: 12px;
            color: #888;
            margin-top: 5px;
            font-style: italic;
        }

        input[type="text"],
        input[type="tel"],
        input[type="url"],
        input[type="number"],
        textarea {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            font-size: 15px;
            transition: all 0.3s ease;
            background: #f8f9fa;
        }
        
        .icon-input {
            width: 60px !important;
            padding: 12px 8px !important;
            text-align: center;
            margin-right: 10px;
            font-size: 1.3em;
            background: #e8f4fd !important;
            border-color: #667eea !important;
        }

        .input-with-icon {
            display: flex;
            align-items: flex-start;
            gap: 0;
        }
        
        .input-with-icon textarea,
        .input-with-icon input[type="text"],
        .input-with-icon input[type="url"] {
            flex-grow: 1;
            width: auto;
        }

        input:focus,
        textarea:focus {
            outline: none;
            border-color: #667eea;
            background: white;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.1);
        }

        .icon-input:focus {
            transform: scale(1.1);
            background: #667eea !important;
            color: white;
        }

        textarea {
            resize: vertical;
            min-height: 100px;
        }

        .icon-suggestions {
            display: flex;
            gap: 8px;
            margin-top: 8px;
            flex-wrap: wrap;
        }

        .icon-suggestion {
            padding: 6px 10px;
            background: #f0f8ff;
            border: 1px solid #667eea;
            border-radius: 15px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s ease;
        }

        .icon-suggestion:hover {
            background: #667eea;
            color: white;
            transform: scale(1.05);
        }

        .info-box {
            background: linear-gradient(135deg, #25D366 0%, #128C7E 100%);
            color: white;
            padding: 15px;
            border-radius: 10px;
            margin-bottom: 20px;
            font-size: 13px;
            line-height: 1.6;
        }

        .clickable-badge {
            display: inline-block;
            padding: 5px 10px;
            background: #25D366;
            color: white;
            border-radius: 5px;
            font-size: 12px;
            margin-left: 10px;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.7; }
            100% { opacity: 1; }
        }

        .dynamic-fields {
            border-top: 2px solid #e0e0e0;
            margin-top: 20px;
            padding-top: 20px;
        }

        .field-row {
            display: grid;
            grid-template-columns: 60px 1fr 1fr auto;
            gap: 10px;
            margin-bottom: 10px;
            align-items: center;
        }

        .add-field-btn,
        .remove-field-btn {
            padding: 10px 15px;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .add-field-btn {
            background: #2ecc71;
            color: white;
            margin-bottom: 20px;
        }

        .add-field-btn:hover {
            background: #27ae60;
            transform: scale(1.05);
        }

        .remove-field-btn {
            background: #e74c3c;
            color: white;
            height: 46px;
        }

        .remove-field-btn:hover {
            background: #c0392b;
        }

        .generate-btn {
            width: 100%;
            padding: 15px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 10px;
            font-size: 18px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: 20px;
        }

        .generate-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
        }

        .preview-section {
            text-align: center;
        }

        #qrcode {
            margin: 30px auto;
            padding: 20px;
            background: white;
            border-radius: 15px;
            display: inline-block;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            min-height: 120px;
            min-width: 120px;
        }

        .qr-placeholder {
            color: #ccc;
            font-size: 14px;
            padding: 50px 20px;
            text-align: center;
        }

        .message-preview {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 10px;
            margin-top: 20px;
            text-align: left;
        }

        .message-preview h4 {
            color: #333;
            margin-bottom: 10px;
            font-size: 16px;
        }

        #messageContent {
            background: white;
            padding: 15px;
            border-radius: 8px;
            border-left: 4px solid #25D366;
            white-space: pre-wrap;
            font-family: 'Segoe UI', system-ui, sans-serif;
            color: #333;
            font-size: 14px;
        }

        .link-preview {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 10px;
            margin-top: 20px;
            word-break: break-all;
        }

        .link-preview h3 {
            color: #333;
            margin-bottom: 10px;
            font-size: 16px;
        }

        .link-preview a {
            color: #667eea;
            text-decoration: none;
            font-size: 14px;
        }

        .action-buttons {
            display: grid;
            grid-template-columns: 1fr 1fr 1fr;
            gap: 10px;
            margin-top: 20px;
        }

        .action-btn {
            padding: 12px;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            font-size: 14px;
        }

        .download-btn { background: #2ecc71; color: white; }
        .copy-btn { background: #3498db; color: white; }
        .test-btn { background: #e67e22; color: white; }

        .action-btn:hover {
            transform: scale(1.05);
        }

        .qr-options {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
            margin-top: 20px;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 10px;
        }

        .color-input-wrapper {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        input[type="color"] {
            width: 50px;
            height: 40px;
            border: none;
            border-radius: 10px;
            cursor: pointer;
        }

        .toast {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: #2ecc71;
            color: white;
            padding: 15px 20px;
            border-radius: 10px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            opacity: 0;
            transform: translateY(100px);
            transition: all 0.3s ease;
            z-index: 1000;
        }

        .toast.show {
            opacity: 1;
            transform: translateY(0);
        }

        @keyframes slideOut {
            from { opacity: 1; transform: translateX(0); }
            to { opacity: 0; transform: translateX(100px); }
        }

        @media (max-width: 768px) {
            .container { grid-template-columns: 1fr; }
            .field-row { grid-template-columns: 1fr; gap: 5px; }
            .action-buttons { grid-template-columns: 1fr; }
            .qr-options { grid-template-columns: 1fr; }
            .input-with-icon { flex-direction: column; align-items: stretch; }
            .icon-input { width: 100% !important; margin-right: 0; margin-bottom: 10px; }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="card">
            <h1>QR Code WhatsApp Generator</h1>
            
            <form id="qrForm">
                <div class="form-group">
                    <label>Numero WhatsApp <span class="required">*</span></label>
                    <input type="tel" id="phoneNumber" placeholder="Es: 393355366950" required>
                </div>

                <div class="form-group">
                    <label>Descrizione QR Code</label>
                    <div class="input-with-icon">
                        <input type="text" id="descriptionIcon" class="icon-input" placeholder="📋" maxlength="3">
                        <textarea id="description" placeholder="Inserisci una descrizione"></textarea>
                    </div>
                    <div class="icon-suggestions">
                        <span class="icon-suggestion" onclick="setIcon('descriptionIcon', '📋')">📋 Info</span>
                        <span class="icon-suggestion" onclick="setIcon('descriptionIcon', '📄')">📄 Documento</span>
                        <span class="icon-suggestion" onclick="setIcon('descriptionIcon', '💼')">💼 Business</span>
                        <span class="icon-suggestion" onclick="setIcon('descriptionIcon', '🎯')">🎯 Obiettivo</span>
                    </div>
                </div>

                <div class="form-group">
                    <label>Testo messaggio WhatsApp</label>
                    <div class="input-with-icon">
                        <input type="text" id="messageTextIcon" class="icon-input" placeholder="💬" maxlength="3">
                        <textarea id="messageText" placeholder="Testo principale del messaggio"></textarea>
                    </div>
                    <div class="icon-suggestions">
                        <span class="icon-suggestion" onclick="setIcon('messageTextIcon', '💬')">💬 Chat</span>
                        <span class="icon-suggestion" onclick="setIcon('messageTextIcon', '📝')">📝 Messaggio</span>
                        <span class="icon-suggestion" onclick="setIcon('messageTextIcon', '✨')">✨ Speciale</span>
                        <span class="icon-suggestion" onclick="setIcon('messageTextIcon', '🔥')">🔥 Hot</span>
                    </div>
                </div>

                <div class="form-group">
                    <label>Testo aggiuntivo</label>
                    <div class="input-with-icon">
                        <input type="text" id="sendTextIcon" class="icon-input" placeholder="📝" maxlength="3">
                        <textarea id="sendText" placeholder="Testo aggiuntivo"></textarea>
                    </div>
                    <div class="icon-suggestions">
                        <span class="icon-suggestion" onclick="setIcon('sendTextIcon', '📝')">📝 Nota</span>
                        <span class="icon-suggestion" onclick="setIcon('sendTextIcon', '⭐')">⭐ Importante</span>
                        <span class="icon-suggestion" onclick="setIcon('sendTextIcon', '💡')">💡 Idea</span>
                        <span class="icon-suggestion" onclick="setIcon('sendTextIcon', '🎁')">🎁 Bonus</span>
                    </div>
                </div>

                <div class="form-group">
                    <label>Testo descrittivo link</label>
                    <div class="input-with-icon">
                        <input type="text" id="linkDescriptionIcon" class="icon-input" placeholder="🔗" maxlength="3">
                        <input type="text" id="linkDescription" placeholder="Es: Scarica il catalogo, Visita il sito">
                    </div>
                    <div class="icon-suggestions">
                        <span class="icon-suggestion" onclick="setIcon('linkDescriptionIcon', '🔗')">🔗 Link</span>
                        <span class="icon-suggestion" onclick="setIcon('linkDescriptionIcon', '🛒')">🛒 Shop</span>
                        <span class="icon-suggestion" onclick="setIcon('linkDescriptionIcon', '📥')">📥 Download</span>
                        <span class="icon-suggestion" onclick="setIcon('linkDescriptionIcon', '🌐')">🌐 Web</span>
                    </div>
                    <div class="field-hint">Testo che apparirà prima del link nel messaggio WhatsApp</div>
                </div>

                <div class="form-group">
                    <label>
                        Link da includere nel messaggio
                        <span class="clickable-badge">Cliccabile in WhatsApp</span>
                    </label>
                    <input type="url" id="linkInMessage" placeholder="https://tuo-link.it">
                    <div class="field-hint">URL completo che sarà cliccabile nel messaggio</div>
                </div>

                <div class="info-box">
                    <strong>🎨 Sistema Icone Personalizzabili:</strong>
                    Inserisci l'emoji o il simbolo che preferisci nel piccolo campo accanto al testo. Puoi digitare direttamente, incollare emoji, o cliccare sui suggerimenti. Le icone rendono il messaggio più professionale e accattivante!
                </div>

                <div class="dynamic-fields">
                    <h3 style="margin-bottom: 15px; color: #333;">Campi Personalizzati</h3>
                    <button type="button" class="add-field-btn" onclick="addCustomField()">
                        ➕ Aggiungi Campo
                    </button>
                    <div id="customFields"></div>
                </div>

                <div class="qr-options">
                    <div class="form-group">
                        <label>Dimensione QR (px)</label>
                        <input type="number" id="qrSize" value="256" min="128" max="512">
                    </div>
                    
                    <div class="form-group">
                        <label>Colore QR</label>
                        <div class="color-input-wrapper">
                            <input type="color" id="qrColor" value="#000000">
                            <span id="colorHex">#000000</span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>Colore Sfondo</label>
                        <div class="color-input-wrapper">
                            <input type="color" id="qrBgColor" value="#FFFFFF">
                            <span id="bgColorHex">#FFFFFF</span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>Riferimento ID</label>
                        <input type="text" id="refId" placeholder="Es: RIF#VA7odD">
                    </div>
                </div>

                <button type="submit" class="generate-btn">
                    🚀 Genera QR Code WhatsApp
                </button>
            </form>
        </div>

        <div class="card preview-section">
            <h1>Anteprima QR Code</h1>
            
            <div id="qrcode">
                <div class="qr-placeholder">QR Code apparirà qui dopo la generazione</div>
            </div>
            
            <div class="message-preview" id="messagePreview" style="display: none;">
                <h4>💬 Anteprima Messaggio WhatsApp:</h4>
                <div id="messageContent"></div>
            </div>
            
            <div class="link-preview" id="linkPreview" style="display: none;">
                <h3>🔗 Link WhatsApp Generato:</h3>
                <a href="#" id="generatedLink" target="_blank"></a>
            </div>

            <div class="action-buttons" id="actionButtons" style="display: none;">
                <button class="action-btn download-btn" onclick="downloadQR()">
                    📥 Scarica QR
                </button>
                <button class="action-btn copy-btn" onclick="copyLink()">
                    📋 Copia Link
                </button>
                <button class="action-btn test-btn" onclick="testWhatsApp()">
                    📱 Test WhatsApp
                </button>
            </div>
        </div>
    </div>

    <div class="toast" id="toast"></div>

    <script>
        let qrcode = null;
        let customFieldCount = 0;
        let generatedLink = '';
        let qrLibraryLoaded = false;

        // Set icon helper function
        function setIcon(inputId, icon) {
            document.getElementById(inputId).value = icon;
            showToast(`✅ Icona ${icon} impostata!`);
        }

        // Fallback QR library loader
        function loadFallbackQR() {
            const script = document.createElement('script');
            script.src = 'https://cdn.jsdelivr.net/npm/qrious@4.0.2/dist/qrious.min.js';
            script.onload = () => {
                qrLibraryLoaded = 'qrious';
            };
            script.onerror = () => {
                showToast('❌ Errore caricamento librerie QR. Verifica connessione internet.', 'error');
            };
            document.head.appendChild(script);
        }

        // Check QR library on load
        window.addEventListener('load', function() {
            setTimeout(() => {
                if (typeof QRCode !== 'undefined') {
                    qrLibraryLoaded = 'qrcode';
                } else if (typeof QRious !== 'undefined') {
                    qrLibraryLoaded = 'qrious';
                } else {
                    loadFallbackQR();
                }
            }, 1000);
        });

        // Generate QR with fallback support
        function generateQRCode(text, size, colorDark, colorLight) {
            const container = document.getElementById('qrcode');
            container.innerHTML = '';

            try {
                if (qrLibraryLoaded === 'qrcode' && typeof QRCode !== 'undefined') {
                    qrcode = new QRCode(container, {
                        text: text,
                        width: size,
                        height: size,
                        colorDark: colorDark,
                        colorLight: colorLight,
                        correctLevel: QRCode.CorrectLevel.H
                    });
                } else if (qrLibraryLoaded === 'qrious' && typeof QRious !== 'undefined') {
                    const canvas = document.createElement('canvas');
                    container.appendChild(canvas);
                    qrcode = new QRious({
                        element: canvas,
                        size: size,
                        value: text,
                        foreground: colorDark,
                        background: colorLight
                    });
                } else {
                    throw new Error('Nessuna libreria QR disponibile');
                }
                return true;
            } catch (error) {
                showToast('❌ Errore generazione QR: ' + error.message, 'error');
                return false;
            }
        }

        // Color handlers
        document.getElementById('qrColor').addEventListener('input', function(e) {
            document.getElementById('colorHex').textContent = e.target.value.toUpperCase();
        });

        document.getElementById('qrBgColor').addEventListener('input', function(e) {
            document.getElementById('bgColorHex').textContent = e.target.value.toUpperCase();
        });

        // Dynamic fields
        function addCustomField() {
            try {
                customFieldCount++;
                const fieldId = 'custom_' + customFieldCount;
                
                const fieldRow = document.createElement('div');
                fieldRow.className = 'field-row';
                fieldRow.id = 'row_' + fieldId;
                
                fieldRow.innerHTML = 
                    '<input type="text" class="icon-input" placeholder="💡" maxlength="3" id="icon_' + fieldId + '">' +
                    '<input type="text" placeholder="Nome campo" id="name_' + fieldId + '">' +
                    '<input type="text" placeholder="Valore" id="value_' + fieldId + '">' +
                    '<button type="button" class="remove-field-btn" onclick="removeField(\'row_' + fieldId + '\')">❌</button>';
                
                document.getElementById('customFields').appendChild(fieldRow);
            } catch (error) {
                showToast('❌ Errore aggiunta campo', 'error');
            }
        }

        function removeField(rowId) {
            try {
                const row = document.getElementById(rowId);
                if (!row) return;
                row.style.animation = 'slideOut 0.3s ease-out';
                setTimeout(() => {
                    if (row && row.parentNode) {
                        row.parentNode.removeChild(row);
                    }
                }, 300);
            } catch (error) {
                showToast('❌ Errore rimozione campo', 'error');
            }
        }

        // Main form handler
        document.getElementById('qrForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            try {
                // Validation
                const phone = document.getElementById('phoneNumber').value.replace(/\D/g, '');
                if (!phone) {
                    showToast('❌ Inserisci un numero WhatsApp valido', 'error');
                    return;
                }

                // Check QR library
                if (!qrLibraryLoaded) {
                    showToast('❌ Libreria QR non caricata. Riprova tra qualche secondo.', 'error');
                    return;
                }

                // Collect data and icons
                const description = document.getElementById('description').value.trim();
                const descriptionIcon = document.getElementById('descriptionIcon').value.trim();

                const messageText = document.getElementById('messageText').value.trim();
                const messageTextIcon = document.getElementById('messageTextIcon').value.trim();

                const sendText = document.getElementById('sendText').value.trim();
                const sendTextIcon = document.getElementById('sendTextIcon').value.trim();

                const linkDescription = document.getElementById('linkDescription').value.trim();
                const linkDescriptionIcon = document.getElementById('linkDescriptionIcon').value.trim();
                const linkInMessage = document.getElementById('linkInMessage').value.trim();
                
                const refId = document.getElementById('refId').value.trim();
                const qrSize = parseInt(document.getElementById('qrSize').value) || 256;
                const qrColor = document.getElementById('qrColor').value;
                const qrBgColor = document.getElementById('qrBgColor').value;

                // Build message with custom icons
                let message = '';
                
                if (description) {
                    message += (descriptionIcon ? descriptionIcon + ' ' : '') + description + '\n\n';
                }
                
                if (messageText) {
                    message += (messageTextIcon ? messageTextIcon + ' ' : '') + messageText + '\n\n';
                }
                
                if (sendText) {
                    message += (sendTextIcon ? sendTextIcon + ' ' : '') + sendText + '\n\n';
                }
                
                if (linkInMessage) {
                    if (linkDescription) {
                        message += (linkDescriptionIcon ? linkDescriptionIcon + ' ' : '') + linkDescription + ': ' + linkInMessage + '\n\n';
                    } else {
                        message += (linkDescriptionIcon ? linkDescriptionIcon + ' ' : '') + linkInMessage + '\n\n';
                    }
                }

                // Custom fields
                const customFieldRows = document.querySelectorAll('[id^="row_custom_"]');
                if (customFieldRows.length > 0) {
                    message += '--- Info Aggiuntive ---\n';
                    customFieldRows.forEach(function(row) {
                        const id = row.id.replace('row_', '');
                        const iconField = document.getElementById('icon_' + id);
                        const nameField = document.getElementById('name_' + id);
                        const valueField = document.getElementById('value_' + id);
                        
                        const customIcon = iconField ? iconField.value.trim() : '';
                        
                        if (nameField && valueField && nameField.value && valueField.value) {
                            message += (customIcon ? customIcon + ' ' : '') + nameField.value + ': ' + valueField.value + '\n';
                        }
                    });
                    message += '\n';
                }
                
                if (refId) {
                    message += '[' + refId + ']';
                }

                message = message.trim();

                // Generate WhatsApp link
                generatedLink = 'https://wa.me/' + phone + '?text=' + encodeURIComponent(message);

                // Show previews
                document.getElementById('messageContent').textContent = message;
                document.getElementById('messagePreview').style.display = 'block';
                document.getElementById('generatedLink').href = generatedLink;
                document.getElementById('generatedLink').textContent = generatedLink;
                document.getElementById('linkPreview').style.display = 'block';
                document.getElementById('actionButtons').style.display = 'grid';

                // Generate QR Code
                const success = generateQRCode(generatedLink, qrSize, qrColor, qrBgColor);
                
                if (success) {
                    showToast('✅ QR Code generato con icone personalizzate!');
                    document.querySelector('.preview-section').scrollIntoView({ 
                        behavior: 'smooth', 
                        block: 'start' 
                    });
                }

            } catch (error) {
                showToast('❌ Errore: ' + error.message, 'error');
            }
        });

        // Action buttons
        function downloadQR() {
            try {
                const canvas = document.querySelector('#qrcode canvas');
                if (!canvas) {
                    showToast('❌ Nessun QR da scaricare', 'error');
                    return;
                }
                
                const link = document.createElement('a');
                link.download = 'qr-whatsapp-' + new Date().toISOString().slice(0, 10) + '.png';
                link.href = canvas.toDataURL();
                link.click();
                showToast('📥 QR Code scaricato!');
            } catch (error) {
                showToast('❌ Errore download', 'error');
            }
        }

        function copyLink() {
            try {
                if (!generatedLink) {
                    showToast('❌ Prima genera un link', 'error');
                    return;
                }
                
                if (navigator.clipboard) {
                    navigator.clipboard.writeText(generatedLink).then(() => {
                        showToast('📋 Link copiato!');
                    }).catch(() => {
                        fallbackCopy();
                    });
                } else {
                    fallbackCopy();
                }
            } catch (error) {
                showToast('❌ Errore copia', 'error');
            }
        }

        function fallbackCopy() {
            try {
                const textArea = document.createElement('textarea');
                textArea.value = generatedLink;
                document.body.appendChild(textArea);
                textArea.select();
                document.execCommand('copy');
                document.body.removeChild(textArea);
                showToast('📋 Link copiato!');
            } catch (error) {
                showToast('❌ Impossibile copiare', 'error');
            }
        }

        function testWhatsApp() {
            try {
                if (!generatedLink) {
                    showToast('❌ Prima genera un link', 'error');
                    return;
                }
                
                window.open(generatedLink, '_blank');
                showToast('📱 WhatsApp aperto!');
            } catch (error) {
                showToast('❌ Errore apertura WhatsApp', 'error');
            }
        }

        // Toast notification
        function showToast(message, type) {
            try {
                const toast = document.getElementById('toast');
                toast.textContent = message;
                toast.style.background = type === 'error' ? '#e74c3c' : '#2ecc71';
                toast.classList.add('show');
                setTimeout(() => {
                    toast.classList.remove('show');
                }, 3000);
            } catch (error) {
                console.error('Toast error:', error);
            }
        }
    </script>
</body>
</html>


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
FILE: email-processor.php
SIZE: 18.28 KB
MODIFIED: 2025-08-12 23:55:44
--------------------------------------------------------------------------------
<?php
/**
 * Email Processor per wa2mail - Versione Gmail
 * Processa email ricevute da wa2mail e estrae numeri WhatsApp
 */

// ===== CONFIGURAZIONE GMAIL =====
// IMPORTANTE: Usa la password per app, NON la tua password normale!
$gmail_config = [
    'email' => 'wepyit@gmail.com',
    'password' => 'suuy clrw kpju moeb',  // ← INSERISCI QUI LA PASSWORD PER APP (16 caratteri)
    'host' => '{imap.gmail.com:993/imap/ssl/novalidate-cert}INBOX'
];

// File di storage
$storage_file = __DIR__ . '/whatsapp_numbers.json';
$processed_file = __DIR__ . '/processed_emails.txt';
$debug_log = __DIR__ . '/email_processor.log';

// Funzione di debug
function debugLog($message) {
    global $debug_log;
    $timestamp = date('Y-m-d H:i:s');
    file_put_contents($debug_log, "[$timestamp] $message\n", FILE_APPEND);
}

// Funzione principale di processamento
function processEmails() {
    global $gmail_config, $storage_file, $processed_file;
    
    debugLog("=== Inizio processamento email ===");
    
    // Rimuovi spazi dalla password (Gmail li ignora)
    $password = str_replace(' ', '', $gmail_config['password']);
    
    // Connetti a Gmail IMAP
    debugLog("Connessione a Gmail IMAP...");
    $inbox = @imap_open(
        $gmail_config['host'], 
        $gmail_config['email'], 
        $password
    );
    
    if (!$inbox) {
        $error = imap_last_error();
        debugLog("ERRORE connessione IMAP: " . $error);
        
        // Suggerimenti per errori comuni
        if (strpos($error, 'AUTHENTICATIONFAILED') !== false) {
            return [
                'error' => true,
                'message' => 'Autenticazione fallita. Verifica di usare la Password per App (non la password normale)',
                'help' => 'Vai su https://myaccount.google.com/apppasswords per creare una password'
            ];
        }
        
        return [
            'error' => true,
            'message' => 'Connessione IMAP fallita: ' . $error
        ];
    }
    
    debugLog("Connesso con successo!");
    
    // Cerca email da wa2mail (upgradeservizi.eu)
    // Puoi modificare la ricerca secondo le tue necessità
    $search_criteria = 'FROM "upgradeservizi.eu" UNSEEN'; // Email non lette
    // Alternative:
    // $search_criteria = 'FROM "upgradeservizi.eu" SINCE "' . date('d-M-Y', strtotime('-1 day')) . '"'; // Ultime 24h
    // $search_criteria = 'SUBJECT "WhatsApp" UNSEEN'; // Con "WhatsApp" nel subject
    
    debugLog("Ricerca email con criterio: $search_criteria");
    $emails = imap_search($inbox, $search_criteria);
    
    $stats = [
        'total' => 0,
        'processed' => 0,
        'new_numbers' => 0,
        'updated_numbers' => 0
    ];
    
    if ($emails) {
        $stats['total'] = count($emails);
        debugLog("Trovate " . $stats['total'] . " email da processare");
        
        // Carica database
        $database = [];
        if (file_exists($storage_file)) {
            $database = json_decode(file_get_contents($storage_file), true) ?: [];
        }
        
        // Carica email già processate
        $processed = [];
        if (file_exists($processed_file)) {
            $processed = array_flip(file($processed_file, FILE_IGNORE_NEW_LINES));
        }
        
        foreach ($emails as $email_number) {
            $header = imap_headerinfo($inbox, $email_number);
            $message_id = $header->message_id ?? uniqid();
            
            // Skip se già processata
            if (isset($processed[$message_id])) {
                debugLog("Email $message_id già processata, skip");
                continue;
            }
            
            // Ottieni subject
            $subject = '';
            if (isset($header->subject)) {
                $subject = imap_utf8($header->subject);
            }
            
            debugLog("Processamento email: $subject");
            
            // Ottieni body
            $body = getEmailBody($inbox, $email_number);
            
            // Estrai numero e nome
            $extraction = extractWhatsAppInfo($subject, $body);
            
            if ($extraction['number']) {
                $number = $extraction['number'];
                $name = $extraction['name'];
                
                if (!isset($database[$number])) {
                    // Nuovo numero
                    $database[$number] = [
                        'number' => $number,
                        'name' => $name ?: 'Sconosciuto',
                        'first_seen' => date('Y-m-d H:i:s'),
                        'last_seen' => date('Y-m-d H:i:s'),
                        'messages' => 1,
                        'source' => 'wa2mail',
                        'last_subject' => substr($subject, 0, 100)
                    ];
                    debugLog("NUOVO numero registrato: $number ($name)");
                    $stats['new_numbers']++;
                    
                    // Invia messaggio di benvenuto
                    sendWelcomeMessage($number, $name);
                } else {
                    // Aggiorna numero esistente
                    $database[$number]['last_seen'] = date('Y-m-d H:i:s');
                    $database[$number]['messages']++;
                    $database[$number]['last_subject'] = substr($subject, 0, 100);
                    if ($name && ($database[$number]['name'] == 'Sconosciuto' || empty($database[$number]['name']))) {
                        $database[$number]['name'] = $name;
                    }
                    debugLog("AGGIORNATO numero: $number");
                    $stats['updated_numbers']++;
                }
                
                $stats['processed']++;
            }
            
            // Segna come processata
            file_put_contents($processed_file, $message_id . "\n", FILE_APPEND);
            
            // Marca email come letta
            imap_setflag_full($inbox, $email_number, "\\Seen");
        }
        
        // Salva database
        file_put_contents($storage_file, json_encode($database, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE));
        debugLog("Database salvato con " . count($database) . " numeri totali");
    } else {
        debugLog("Nessuna nuova email trovata");
    }
    
    imap_close($inbox);
    
    return [
        'success' => true,
        'stats' => $stats,
        'total_numbers' => count($database ?? [])
    ];
}

// Funzione per estrarre il body dell'email
function getEmailBody($inbox, $email_number) {
    $structure = imap_fetchstructure($inbox, $email_number);
    $body = '';
    
    if (!isset($structure->parts)) {
        // Email semplice
        $body = imap_body($inbox, $email_number);
    } else {
        // Email multipart
        foreach ($structure->parts as $part_number => $part) {
            if ($part->type == 0) { // TYPETEXT
                $body = imap_fetchbody($inbox, $email_number, $part_number + 1);
                
                // Decodifica se necessario
                if ($part->encoding == 3) { // BASE64
                    $body = base64_decode($body);
                } elseif ($part->encoding == 4) { // QUOTED-PRINTABLE
                    $body = quoted_printable_decode($body);
                }
                
                break; // Prendi solo la prima parte testuale
            }
        }
    }
    
    // Pulisci HTML se presente
    $body = strip_tags($body);
    $body = html_entity_decode($body, ENT_QUOTES | ENT_HTML5, 'UTF-8');
    
    return $body;
}

// Funzione per estrarre info WhatsApp
function extractWhatsAppInfo($subject, $body) {
    $number = '';
    $name = '';
    
    // Combina subject e body per la ricerca
    $full_text = $subject . ' ' . $body;
    
    // Pattern 1: nome, numero@g.us o nome - numero@g.us
    if (preg_match('/([^,\-\n]+?)[,\s\-]+(\d{10,15})@[gc]\.us/i', $full_text, $matches)) {
        $name = trim($matches[1]);
        $number = $matches[2];
        
        // Pulisci il nome da caratteri speciali
        $name = preg_replace('/[^\w\s\-\.]/u', '', $name);
        $name = trim($name);
    }
    // Pattern 2: solo numero@g.us
    elseif (preg_match('/(\d{10,15})@[gc]\.us/i', $full_text, $matches)) {
        $number = $matches[1];
    }
    // Pattern 3: numero italiano standard (39...)
    elseif (preg_match('/\b(39\d{9,10})\b/', $full_text, $matches)) {
        $number = $matches[1];
    }
    
    debugLog("Estratto: Numero=$number, Nome=$name");
    
    return [
        'number' => $number,
        'name' => $name
    ];
}

// Funzione per inviare messaggio di benvenuto
function sendWelcomeMessage($number, $name = '') {
    $apiKey = '1f06d5c8bd0cd19f7c99b660b504bb25';
    
    $welcomeMessage = "🎉 Ciao " . ($name ?: 'amico') . "!\n\n";
    $welcomeMessage .= "Il tuo numero è stato registrato nel nostro sistema.\n";
    $welcomeMessage .= "Grazie per averci contattato via WhatsApp!\n\n";
    $welcomeMessage .= "📱 Numero registrato: " . $number;
    
    $url = "https://api.Mail2Wa.it/?action=send&apiKey=" . $apiKey;
    $data = json_encode([
        'to' => $number,
        'message' => $welcomeMessage
    ]);
    
    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
    curl_setopt($ch, CURLOPT_HTTPHEADER, ['Content-Type: application/json']);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_TIMEOUT, 10);
    
    $result = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    debugLog("Welcome message inviato a $number - Status: $httpCode");
    
    return $httpCode == 200;
}

// Se eseguito da CLI
if (php_sapi_name() === 'cli') {
    echo "Email Processor per wa2mail\n";
    echo "============================\n\n";
    
    $result = processEmails();
    
    if ($result['error']) {
        echo "❌ ERRORE: " . $result['message'] . "\n";
        if (isset($result['help'])) {
            echo "ℹ️ " . $result['help'] . "\n";
        }
    } else {
        echo "✅ Processamento completato!\n";
        echo "- Email totali: " . $result['stats']['total'] . "\n";
        echo "- Email processate: " . $result['stats']['processed'] . "\n";
        echo "- Nuovi numeri: " . $result['stats']['new_numbers'] . "\n";
        echo "- Numeri aggiornati: " . $result['stats']['updated_numbers'] . "\n";
        echo "- Totale numeri in database: " . $result['total_numbers'] . "\n";
    }
    
    exit(0);
}

// Se eseguito da browser
?>
<!DOCTYPE html>
<html lang="it">
<head>
    <title>Email Processor per wa2mail - Gmail</title>
    <meta charset="UTF-8">
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        .container {
            max-width: 900px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
        }
        h1 { color: #333; margin-bottom: 20px; }
        .status-box {
            padding: 20px;
            border-radius: 10px;
            margin: 20px 0;
        }
        .success { background: #d4edda; color: #155724; }
        .error { background: #f8d7da; color: #721c24; }
        .info { background: #d1ecf1; color: #0c5460; }
        .warning { background: #fff3cd; color: #856404; }
        code {
            background: #f4f4f4;
            padding: 2px 6px;
            border-radius: 3px;
            font-family: monospace;
        }
        .button {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            text-decoration: none;
            display: inline-block;
            margin: 10px 0;
        }
        .button:hover { transform: translateY(-2px); box-shadow: 0 5px 15px rgba(0,0,0,0.2); }
        pre {
            background: #263238;
            color: #aed581;
            padding: 15px;
            border-radius: 8px;
            overflow-x: auto;
            margin: 10px 0;
        }
        .numbers-list {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 20px;
            margin: 20px 0;
            max-height: 400px;
            overflow-y: auto;
        }
        .number-item {
            display: flex;
            justify-content: space-between;
            padding: 10px;
            margin: 5px 0;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }
        .setup-steps {
            background: #f0f7ff;
            border: 2px solid #667eea;
            border-radius: 10px;
            padding: 20px;
            margin: 20px 0;
        }
        .setup-steps ol { margin-left: 20px; }
        .setup-steps li { margin: 10px 0; }
    </style>
</head>
<body>
    <div class="container">
        <h1>📧 Email Processor per wa2mail - Gmail</h1>
        
        <?php
        // Controlla configurazione
        $password_configured = !empty($gmail_config['password']) && $gmail_config['password'] !== 'xxxx xxxx xxxx xxxx';
        
        if (!$password_configured):
        ?>
            <div class="status-box warning">
                <h2>⚠️ Configurazione Richiesta</h2>
                <p>Devi configurare la password per app di Gmail prima di procedere.</p>
            </div>
            
            <div class="setup-steps">
                <h3>📋 Come configurare Gmail:</h3>
                <ol>
                    <li>
                        <strong>Abilita IMAP in Gmail:</strong><br>
                        Gmail → Impostazioni → Inoltro e POP/IMAP → Abilita IMAP
                    </li>
                    <li>
                        <strong>Attiva la verifica in due passaggi:</strong><br>
                        <a href="https://myaccount.google.com/signinoptions/two-step-verification" target="_blank">
                            https://myaccount.google.com/signinoptions/two-step-verification
                        </a>
                    </li>
                    <li>
                        <strong>Crea una Password per App:</strong><br>
                        <a href="https://myaccount.google.com/apppasswords" target="_blank">
                            https://myaccount.google.com/apppasswords
                        </a><br>
                        Seleziona "Mail" e genera una password di 16 caratteri
                    </li>
                    <li>
                        <strong>Modifica questo file:</strong><br>
                        Inserisci la password generata nella variabile <code>$gmail_config['password']</code>
                    </li>
                </ol>
            </div>
        
        <?php else: ?>
            
            <?php
            // Processa email
            $result = processEmails();
            
            if (isset($result['error']) && $result['error']):
            ?>
                <div class="status-box error">
                    <h2>❌ Errore</h2>
                    <p><?php echo htmlspecialchars($result['message']); ?></p>
                    <?php if (isset($result['help'])): ?>
                        <p><strong>Suggerimento:</strong> <?php echo htmlspecialchars($result['help']); ?></p>
                    <?php endif; ?>
                </div>
            
            <?php else: ?>
                
                <div class="status-box success">
                    <h2>✅ Processamento Completato</h2>
                    <ul>
                        <li>Email trovate: <?php echo $result['stats']['total']; ?></li>
                        <li>Email processate: <?php echo $result['stats']['processed']; ?></li>
                        <li>Nuovi numeri: <?php echo $result['stats']['new_numbers']; ?></li>
                        <li>Numeri aggiornati: <?php echo $result['stats']['updated_numbers']; ?></li>
                    </ul>
                </div>
                
                <?php
                // Mostra database numeri
                if (file_exists($storage_file)):
                    $database = json_decode(file_get_contents($storage_file), true) ?: [];
                    if (count($database) > 0):
                ?>
                    <h2>📱 Numeri Registrati (<?php echo count($database); ?>)</h2>
                    <div class="numbers-list">
                        <?php foreach ($database as $num => $info): ?>
                            <div class="number-item">
                                <div>
                                    <strong><?php echo htmlspecialchars($info['name']); ?></strong><br>
                                    <small><?php echo $num; ?></small>
                                </div>
                                <div style="text-align: right;">
                                    <small>
                                        <?php echo $info['messages']; ?> msg<br>
                                        <?php echo $info['last_seen']; ?>
                                    </small>
                                </div>
                            </div>
                        <?php endforeach; ?>
                    </div>
                <?php endif; endif; ?>
                
            <?php endif; ?>
            
            <div class="status-box info">
                <h3>🔄 Automazione con Cron</h3>
                <p>Per processare automaticamente le email ogni 5 minuti, aggiungi questo cron job:</p>
                <pre>*/5 * * * * php <?php echo __FILE__; ?></pre>
            </div>
            
            <div style="text-align: center; margin-top: 30px;">
                <a href="?" class="button">🔄 Riprocessa Email</a>
            </div>
            
        <?php endif; ?>
        
        <?php if (file_exists($debug_log)): ?>
            <div style="margin-top: 30px;">
                <h3>📝 Log di Debug</h3>
                <pre><?php 
                    $logs = file_get_contents($debug_log);
                    $lines = explode("\n", $logs);
                    echo htmlspecialchars(implode("\n", array_slice($lines, -30)));
                ?></pre>
            </div>
        <?php endif; ?>
    </div>
</body>
</html>


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
FILE: email_processor.log
SIZE: 14.04 KB
MODIFIED: 2025-08-13 00:40:55
--------------------------------------------------------------------------------
[2025-08-12 23:55:49] === Inizio processamento email ===
[2025-08-12 23:55:49] Connessione a Gmail IMAP...
[2025-08-12 23:55:50] Connesso con successo!
[2025-08-12 23:55:50] Ricerca email con criterio: FROM "upgradeservizi.eu" UNSEEN
[2025-08-12 23:55:51] Trovate 40 email da processare
[2025-08-12 23:55:51] Processamento email: Messaggi ricevuti da WhatsApp 34617886032-1505902026@g.us - monyka24 mg
[2025-08-12 23:55:51] Estratto: Numero=1505902026, Nome=Messaggi ricevuti da WhatsApp 34617886032
[2025-08-12 23:55:51] NUOVO numero registrato: 1505902026 (Messaggi ricevuti da WhatsApp 34617886032)
[2025-08-12 23:55:54] Welcome message inviato a 1505902026 - Status: 200
[2025-08-12 23:55:54] Processamento email: Messaggi ricevuti da WhatsApp 34617886032-1505902026@g.us - monyka24 mg
[2025-08-12 23:55:54] Estratto: Numero=1505902026, Nome=Messaggi ricevuti da WhatsApp 34617886032
[2025-08-12 23:55:54] AGGIORNATO numero: 1505902026
[2025-08-12 23:55:54] Processamento email: Messaggi ricevuti da WhatsApp 120363397729588278@g.us - Gino
[2025-08-12 23:55:54] Estratto: Numero=363397729588278, Nome=
[2025-08-12 23:55:54] NUOVO numero registrato: 363397729588278 ()
[2025-08-12 23:55:56] Welcome message inviato a 363397729588278 - Status: 200
[2025-08-12 23:55:56] Processamento email: Messaggi ricevuti da WhatsApp 34617886032-1505902026@g.us - Annamaria
[2025-08-12 23:55:56] Estratto: Numero=1505902026, Nome=Messaggi ricevuti da WhatsApp 34617886032
[2025-08-12 23:55:56] AGGIORNATO numero: 1505902026
[2025-08-12 23:55:56] Processamento email: Messaggi ricevuti da WhatsApp 34617886032-1505902026@g.us - Annamaria
[2025-08-12 23:55:57] Estratto: Numero=1505902026, Nome=Messaggi ricevuti da WhatsApp 34617886032
[2025-08-12 23:55:57] AGGIORNATO numero: 1505902026
[2025-08-12 23:55:57] Processamento email: Messaggi ricevuti da WhatsApp 34617886032-1505902026@g.us - Annamaria
[2025-08-12 23:55:57] Estratto: Numero=1505902026, Nome=Messaggi ricevuti da WhatsApp 34617886032
[2025-08-12 23:55:57] AGGIORNATO numero: 1505902026
[2025-08-12 23:55:57] Processamento email: Messaggi ricevuti da WhatsApp 34617886032-1505902026@g.us - 🐶❤️👱‍♀️
[2025-08-12 23:55:57] Estratto: Numero=1505902026, Nome=Messaggi ricevuti da WhatsApp 34617886032
[2025-08-12 23:55:57] AGGIORNATO numero: 1505902026
[2025-08-12 23:55:57] Processamento email: Messaggi ricevuti da WhatsApp 34617886032-1505902026@g.us - Annamaria
[2025-08-12 23:55:58] Estratto: Numero=1505902026, Nome=Messaggi ricevuti da WhatsApp 34617886032
[2025-08-12 23:55:58] AGGIORNATO numero: 1505902026
[2025-08-12 23:55:58] Processamento email: Messaggi ricevuti da WhatsApp 34617886032-1505902026@g.us - Annamaria
[2025-08-12 23:55:58] Estratto: Numero=1505902026, Nome=Messaggi ricevuti da WhatsApp 34617886032
[2025-08-12 23:55:58] AGGIORNATO numero: 1505902026
[2025-08-12 23:55:58] Processamento email: Messaggi ricevuti da WhatsApp 120363397729588278@g.us - Emanuele
[2025-08-12 23:55:58] Estratto: Numero=363397729588278, Nome=
[2025-08-12 23:55:58] AGGIORNATO numero: 363397729588278
[2025-08-12 23:55:58] Processamento email: Messaggi ricevuti da WhatsApp 34617886032-1505902026@g.us - alberto ferrante
[2025-08-12 23:55:59] Estratto: Numero=1505902026, Nome=Messaggi ricevuti da WhatsApp 34617886032
[2025-08-12 23:55:59] AGGIORNATO numero: 1505902026
[2025-08-12 23:55:59] Processamento email: Messaggi ricevuti da WhatsApp 34617886032-1505902026@g.us - annapepeferrante
[2025-08-12 23:55:59] Estratto: Numero=1505902026, Nome=Messaggi ricevuti da WhatsApp 34617886032
[2025-08-12 23:55:59] AGGIORNATO numero: 1505902026
[2025-08-12 23:55:59] Processamento email: Messaggi ricevuti da WhatsApp 120363397729588278@g.us - Massimo Caforio
[2025-08-12 23:55:59] Estratto: Numero=363397729588278, Nome=
[2025-08-12 23:55:59] AGGIORNATO numero: 363397729588278
[2025-08-12 23:55:59] Processamento email: Messaggi ricevuti da WhatsApp 393389517858-1448013984@g.us - Fortunato Nunnari
[2025-08-12 23:56:00] Estratto: Numero=1448013984, Nome=Messaggi ricevuti da WhatsApp 393389517858
[2025-08-12 23:56:00] NUOVO numero registrato: 1448013984 (Messaggi ricevuti da WhatsApp 393389517858)
[2025-08-12 23:56:00] Welcome message inviato a 1448013984 - Status: 200
[2025-08-12 23:56:00] Processamento email: Messaggi ricevuti da WhatsApp 393389517858-1448013984@g.us - Leo
[2025-08-12 23:56:00] Estratto: Numero=1448013984, Nome=Messaggi ricevuti da WhatsApp 393389517858
[2025-08-12 23:56:00] AGGIORNATO numero: 1448013984
[2025-08-12 23:56:01] Processamento email: Messaggi ricevuti da WhatsApp 120363047030135633@g.us - Sophia
[2025-08-12 23:56:01] Estratto: Numero=363047030135633, Nome=
[2025-08-12 23:56:01] NUOVO numero registrato: 363047030135633 ()
[2025-08-12 23:56:01] Welcome message inviato a 363047030135633 - Status: 200
[2025-08-12 23:56:01] Processamento email: Messaggi ricevuti da WhatsApp 393389517858-1448013984@g.us - Sergio
[2025-08-12 23:56:02] Estratto: Numero=1448013984, Nome=Messaggi ricevuti da WhatsApp 393389517858
[2025-08-12 23:56:02] AGGIORNATO numero: 1448013984
[2025-08-12 23:56:02] Processamento email: Messaggi ricevuti da WhatsApp 120363047030135633@g.us - 🐶❤️👱‍♀️
[2025-08-12 23:56:02] Estratto: Numero=363047030135633, Nome=
[2025-08-12 23:56:02] AGGIORNATO numero: 363047030135633
[2025-08-12 23:56:02] Processamento email: Messaggi ricevuti da WhatsApp 120363047030135633@g.us - monyka24 mg
[2025-08-12 23:56:03] Estratto: Numero=363047030135633, Nome=
[2025-08-12 23:56:03] AGGIORNATO numero: 363047030135633
[2025-08-12 23:56:03] Processamento email: Messaggi ricevuti da WhatsApp 120363047030135633@g.us - Annamaria
[2025-08-12 23:56:03] Estratto: Numero=363047030135633, Nome=
[2025-08-12 23:56:03] AGGIORNATO numero: 363047030135633
[2025-08-12 23:56:03] Processamento email: Messaggi ricevuti da WhatsApp 34617886032-1505902026@g.us - Annamaria
[2025-08-12 23:56:03] Estratto: Numero=1505902026, Nome=Messaggi ricevuti da WhatsApp 34617886032
[2025-08-12 23:56:03] AGGIORNATO numero: 1505902026
[2025-08-12 23:56:03] Processamento email: Nel testo é possibile inserire i seguenti Token: monyka24 mg, 393335344305 Es: Messaggi ricevuti su WhatsApp: monyka24 mg - 393335344305
[2025-08-12 23:56:04] Estratto: Numero=393335344305, Nome=
[2025-08-12 23:56:04] NUOVO numero registrato: 393335344305 ()
[2025-08-12 23:56:04] Welcome message inviato a 393335344305 - Status: 200
[2025-08-12 23:56:04] Processamento email: Nel testo é possibile inserire i seguenti Token: Emanuele, 120363397729588278@g.us Es: Messaggi ricevuti su WhatsApp: Emanuele - 120363397729588278@g.us
[2025-08-12 23:56:04] Estratto: Numero=363397729588278, Nome=
[2025-08-12 23:56:04] AGGIORNATO numero: 363397729588278
[2025-08-12 23:56:04] Processamento email: Nel testo é possibile inserire i seguenti Token: Emanuele, 120363351772645764@g.us Es: Messaggi ricevuti su WhatsApp: Emanuele - 120363351772645764@g.us
[2025-08-12 23:56:05] Estratto: Numero=363351772645764, Nome=
[2025-08-12 23:56:05] NUOVO numero registrato: 363351772645764 ()
[2025-08-12 23:56:07] Welcome message inviato a 363351772645764 - Status: 200
[2025-08-12 23:56:07] Processamento email: Nel testo é possibile inserire i seguenti Token: Gino, 120363351772645764@g.us Es: Messaggi ricevuti su WhatsApp: Gino - 120363351772645764@g.us
[2025-08-12 23:56:07] Estratto: Numero=363351772645764, Nome=
[2025-08-12 23:56:07] AGGIORNATO numero: 363351772645764
[2025-08-12 23:56:07] Processamento email: Nel testo é possibile inserire i seguenti Token: Massimo Caforio, 120363351772645764@g.us Es: Messaggi ricevuti su WhatsApp: Massimo Caforio - 120363351772645764@g.us
[2025-08-12 23:56:08] Estratto: Numero=363351772645764, Nome=
[2025-08-12 23:56:08] AGGIORNATO numero: 363351772645764
[2025-08-12 23:56:08] Processamento email: Nel testo é possibile inserire i seguenti Token: Formeterolo😂, 120363351772645764@g.us Es: Messaggi ricevuti su WhatsApp: Formeterolo😂 - 120363351772645764@g.us
[2025-08-12 23:56:08] Estratto: Numero=363351772645764, Nome=
[2025-08-12 23:56:08] AGGIORNATO numero: 363351772645764
[2025-08-12 23:56:08] Processamento email: Nel testo é possibile inserire i seguenti Token: Formeterolo😂, 120363351772645764@g.us Es: Messaggi ricevuti su WhatsApp: Formeterolo😂 - 120363351772645764@g.us
[2025-08-12 23:56:08] Estratto: Numero=363351772645764, Nome=
[2025-08-12 23:56:08] AGGIORNATO numero: 363351772645764
[2025-08-12 23:56:08] Processamento email: Nel testo é possibile inserire i seguenti Token: Massimo Caforio, 120363351772645764@g.us Es: Messaggi ricevuti su WhatsApp: Massimo Caforio - 120363351772645764@g.us
[2025-08-12 23:56:08] Estratto: Numero=363351772645764, Nome=
[2025-08-12 23:56:08] AGGIORNATO numero: 363351772645764
[2025-08-12 23:56:08] Processamento email: Nel testo é possibile inserire i seguenti Token: Emanuele, 120363351772645764@g.us Es: Messaggi ricevuti su WhatsApp: Emanuele - 120363351772645764@g.us
[2025-08-12 23:56:09] Estratto: Numero=363351772645764, Nome=
[2025-08-12 23:56:09] AGGIORNATO numero: 363351772645764
[2025-08-12 23:56:09] Processamento email: Nel testo é possibile inserire i seguenti Token: Emanuele, 120363351772645764@g.us Es: Messaggi ricevuti su WhatsApp: Emanuele - 120363351772645764@g.us
[2025-08-12 23:56:09] Estratto: Numero=363351772645764, Nome=
[2025-08-12 23:56:09] AGGIORNATO numero: 363351772645764
[2025-08-12 23:56:09] Processamento email: Nel testo é possibile inserire i seguenti Token: Emanuele, 120363351772645764@g.us Es: Messaggi ricevuti su WhatsApp: Emanuele - 120363351772645764@g.us
[2025-08-12 23:56:09] Estratto: Numero=363351772645764, Nome=
[2025-08-12 23:56:09] AGGIORNATO numero: 363351772645764
[2025-08-12 23:56:09] Processamento email: Nel testo é possibile inserire i seguenti Token: Emanuele, 120363397729588278@g.us Es: Messaggi ricevuti su WhatsApp: Emanuele - 120363397729588278@g.us
[2025-08-12 23:56:10] Estratto: Numero=363397729588278, Nome=
[2025-08-12 23:56:10] AGGIORNATO numero: 363397729588278
[2025-08-12 23:56:10] Processamento email: Nel testo é possibile inserire i seguenti Token: Formeterolo😂, 120363351772645764@g.us Es: Messaggi ricevuti su WhatsApp: Formeterolo😂 - 120363351772645764@g.us
[2025-08-12 23:56:10] Estratto: Numero=363351772645764, Nome=
[2025-08-12 23:56:10] AGGIORNATO numero: 363351772645764
[2025-08-12 23:56:10] Processamento email: Nel testo é possibile inserire i seguenti Token: Emanuele, 120363397729588278@g.us Es: Messaggi ricevuti su WhatsApp: Emanuele - 120363397729588278@g.us
[2025-08-12 23:56:10] Estratto: Numero=363397729588278, Nome=
[2025-08-12 23:56:10] AGGIORNATO numero: 363397729588278
[2025-08-12 23:56:10] Processamento email: Nel testo é possibile inserire i seguenti Token: Emanuele, 120363397729588278@g.us Es: Messaggi ricevuti su WhatsApp: Emanuele - 120363397729588278@g.us
[2025-08-12 23:56:11] Estratto: Numero=363397729588278, Nome=
[2025-08-12 23:56:11] AGGIORNATO numero: 363397729588278
[2025-08-12 23:56:11] Processamento email: Nel testo é possibile inserire i seguenti Token: Gino, 120363397729588278@g.us Es: Messaggi ricevuti su WhatsApp: Gino - 120363397729588278@g.us
[2025-08-12 23:56:11] Estratto: Numero=363397729588278, Nome=
[2025-08-12 23:56:11] AGGIORNATO numero: 363397729588278
[2025-08-12 23:56:11] Processamento email: Nel testo é possibile inserire i seguenti Token: Gino, 120363397729588278@g.us Es: Messaggi ricevuti su WhatsApp: Gino - 120363397729588278@g.us
[2025-08-12 23:56:11] Estratto: Numero=363397729588278, Nome=
[2025-08-12 23:56:11] AGGIORNATO numero: 363397729588278
[2025-08-12 23:56:11] Processamento email: Nel testo é possibile inserire i seguenti Token: Emanuele, 120363397729588278@g.us Es: Messaggi ricevuti su WhatsApp: Emanuele - 120363397729588278@g.us
[2025-08-12 23:56:12] Estratto: Numero=363397729588278, Nome=
[2025-08-12 23:56:12] AGGIORNATO numero: 363397729588278
[2025-08-12 23:56:12] Processamento email: Nel testo é possibile inserire i seguenti Token: Gino, 120363397729588278@g.us Es: Messaggi ricevuti su WhatsApp: Gino - 120363397729588278@g.us
[2025-08-12 23:56:12] Estratto: Numero=363397729588278, Nome=
[2025-08-12 23:56:12] AGGIORNATO numero: 363397729588278
[2025-08-12 23:56:12] Database salvato con 7 numeri totali
[2025-08-13 00:28:21] === Inizio processamento email ===
[2025-08-13 00:28:21] Connessione a Gmail IMAP...
[2025-08-13 00:28:23] Connesso con successo!
[2025-08-13 00:28:23] Ricerca email con criterio: FROM "upgradeservizi.eu" UNSEEN
[2025-08-13 00:28:23] Trovate 1 email da processare
[2025-08-13 00:28:24] Processamento email: Nel testo é possibile inserire i seguenti Token: alberto ferrante, 393511845192 Es: Messaggi ricevuti su WhatsApp: alberto ferrante - 393511845192
[2025-08-13 00:28:24] Estratto: Numero=393511845192, Nome=
[2025-08-13 00:28:24] AGGIORNATO numero: 393511845192
[2025-08-13 00:28:24] Database salvato con 2 numeri totali
[2025-08-13 00:34:38] === Inizio processamento email ===
[2025-08-13 00:34:38] Connessione a Gmail IMAP...
[2025-08-13 00:34:39] Connesso con successo!
[2025-08-13 00:34:39] Ricerca email con criterio: FROM "upgradeservizi.eu" UNSEEN
[2025-08-13 00:34:40] Nessuna nuova email trovata
[2025-08-13 00:34:40] === Inizio processamento email ===
[2025-08-13 00:34:40] Connessione a Gmail IMAP...
[2025-08-13 00:34:42] Connesso con successo!
[2025-08-13 00:34:42] Ricerca email con criterio: FROM "upgradeservizi.eu" UNSEEN
[2025-08-13 00:34:42] Nessuna nuova email trovata
[2025-08-13 00:35:12] === Inizio processamento email ===
[2025-08-13 00:35:12] Connessione a Gmail IMAP...
[2025-08-13 00:35:13] Connesso con successo!
[2025-08-13 00:35:13] Ricerca email con criterio: FROM "upgradeservizi.eu" UNSEEN
[2025-08-13 00:35:14] Nessuna nuova email trovata
[2025-08-13 00:39:32] === Inizio processamento email ===
[2025-08-13 00:39:32] Connessione a Gmail IMAP...
[2025-08-13 00:39:34] Connesso con successo!
[2025-08-13 00:39:34] Ricerca email con criterio: FROM "upgradeservizi.eu" UNSEEN
[2025-08-13 00:39:34] Nessuna nuova email trovata
[2025-08-13 00:40:53] === Inizio processamento email ===
[2025-08-13 00:40:53] Connessione a Gmail IMAP...
[2025-08-13 00:40:55] Connesso con successo!
[2025-08-13 00:40:55] Ricerca email con criterio: FROM "upgradeservizi.eu" UNSEEN
[2025-08-13 00:40:55] Nessuna nuova email trovata


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
FILE: index.html
SIZE: 36.81 KB
MODIFIED: 2025-08-12 21:01:00
--------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mail2WA Sender</title>
    
    <!-- React e Babel per JSX -->
    <script crossorigin src="https://unpkg.com/react@18/umd/react.production.min.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js"></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
    
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    
    <style>
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        .animate-spin {
            animation: spin 1s linear infinite;
        }
    </style>
</head>
<body>
    <div id="root"></div>
    
    <script type="text/babel">
        const { useState, useEffect } = React;

        const Mail2WAApp = () => {
            const [apiKey, setApiKey] = useState('1f06d5c8bd0cd19f7c99b660b504bb25');
            const [phone, setPhone] = useState('');
            const [message, setMessage] = useState('');
            const [welcomePhone, setWelcomePhone] = useState('');
            const [welcomeMessage, setWelcomeMessage] = useState('🎉 Benvenuto! Grazie per esserti registrato al nostro servizio. Il tuo numero {{SENDER_PHONE}} è stato registrato con successo.');
            const [isMediaMode, setIsMediaMode] = useState(false);
            const [selectedFile, setSelectedFile] = useState(null);
            const [loading, setLoading] = useState(false);
            const [status, setStatus] = useState({ text: '', type: '' });
            const [fileBase64, setFileBase64] = useState('');
            const [qrCodeUrl, setQrCodeUrl] = useState('');
            const [qrLoading, setQrLoading] = useState(false);
            const [directApiUrl, setDirectApiUrl] = useState('');

            // Show status message with auto-hide
            const showStatus = (text, type) => {
                setStatus({ text, type });
                setTimeout(() => setStatus({ text: '', type: '' }), 5000);
            };

            // File to Base64 conversion
            const fileToBase64 = (file) => {
                return new Promise((resolve, reject) => {
                    const reader = new FileReader();
                    reader.readAsDataURL(file);
                    reader.onload = () => {
                        const base64 = reader.result.split(',')[1];
                        resolve(base64);
                    };
                    reader.onerror = error => reject(error);
                });
            };

            // Handle file selection
            const handleFileSelect = async (file) => {
                setSelectedFile(file);
                if (file) {
                    try {
                        const base64 = await fileToBase64(file);
                        setFileBase64(base64);
                        showStatus('✅ File convertito in base64', 'success');
                    } catch (error) {
                        showStatus('❌ Errore conversione file', 'error');
                    }
                }
            };

            // Generate Welcome QR with PHP redirect page - AGGIORNATO
            const generateWelcomeQRWithPHP = () => {
                if (!apiKey || !welcomePhone || !welcomeMessage) {
                    showStatus('❌ Compila tutti i campi richiesti', 'error');
                    return;
                }

                setQrLoading(true);

                // Genera codice PHP aggiornato con QR della pagina stessa e numero mittente
                const phpCode = `<?php
// Salva questo file come send-welcome.php sul tuo server

header('Access-Control-Allow-Origin: *');
header('Content-Type: text/html; charset=UTF-8');

$apiKey = '${apiKey}';
$phone = '${welcomePhone}';
$messageTemplate = '${welcomeMessage.replace(/'/g, "\\'")}';

// Ottieni il numero del mittente dal parametro GET (se presente)
$senderPhone = isset($_GET['from']) ? $_GET['from'] : '';

// Sostituisci il placeholder con il numero del mittente
$message = str_replace('{{SENDER_PHONE}}', $senderPhone, $messageTemplate);

// URL corrente della pagina
$currentUrl = (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? "https" : "http") . "://$_SERVER[HTTP_HOST]$_SERVER[REQUEST_URI]";
// Rimuovi eventuali parametri esistenti e aggiungi il form
$baseUrl = strtok($currentUrl, '?');
$qrUrl = $baseUrl . '?from=';

if ($_SERVER['REQUEST_METHOD'] === 'GET' && !isset($_GET['send'])) {
    // Mostra pagina di conferma con QR Code
    ?>
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Invio Messaggio di Benvenuto</title>
        <style>
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                display: flex;
                justify-content: center;
                align-items: center;
                margin: 0;
                padding: 20px;
            }
            .container {
                background: white;
                border-radius: 20px;
                padding: 40px;
                max-width: 600px;
                width: 100%;
                box-shadow: 0 20px 60px rgba(0,0,0,0.3);
                text-align: center;
            }
            .logo {
                font-size: 60px;
                margin-bottom: 20px;
            }
            h1 {
                color: #333;
                margin-bottom: 20px;
                font-size: 28px;
            }
            .button {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                border: none;
                padding: 15px 30px;
                border-radius: 10px;
                font-size: 18px;
                font-weight: bold;
                cursor: pointer;
                margin-top: 20px;
                transition: transform 0.2s;
                text-decoration: none;
                display: inline-block;
            }
            .button:hover {
                transform: scale(1.05);
            }
            .message-preview {
                background: #f8f9fa;
                border-radius: 15px;
                padding: 20px;
                margin: 20px 0;
                text-align: left;
                border-left: 4px solid #667eea;
            }
            .message-preview h3 {
                color: #667eea;
                margin-bottom: 10px;
                font-size: 14px;
                text-transform: uppercase;
            }
            .phone-input {
                width: 100%;
                padding: 15px;
                border: 2px solid #e0e0e0;
border-radius: 10px;
                font-size: 16px;
                margin: 20px 0;
                transition: border-color 0.3s;
            }
            .phone-input:focus {
                outline: none;
                border-color: #667eea;
            }
            .qr-section {
                background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
                border-radius: 15px;
                padding: 30px;
                margin: 30px 0;
            }
            .qr-code {
                background: white;
                padding: 20px;
                border-radius: 10px;
                display: inline-block;
                box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            }
            .info-text {
                color: #666;
                font-size: 14px;
                margin-top: 15px;
                line-height: 1.6;
            }
            .success-message {
                background: #d4edda;
                color: #155724;
                border: 1px solid #c3e6cb;
                padding: 15px;
                border-radius: 10px;
                margin: 20px 0;
            }
            .error-message {
                background: #f8d7da;
                color: #721c24;
                border: 1px solid #f5c6cb;
                padding: 15px;
                border-radius: 10px;
                margin: 20px 0;
            }
            .divider {
                margin: 30px 0;
                height: 1px;
                background: linear-gradient(to right, transparent, #e0e0e0, transparent);
            }
            .feature-box {
                background: #f0f7ff;
                border: 2px solid #667eea;
                border-radius: 10px;
                padding: 15px;
                margin: 20px 0;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="logo">🎉</div>
            <h1>Sistema di Benvenuto WhatsApp</h1>
            
            <?php if (empty($senderPhone)): ?>
                <!-- Mostra QR Code per far compilare il form -->
                <div class="qr-section">
                    <h2 style="color: #667eea; margin-bottom: 20px;">📱 Scansiona per Registrarti</h2>
                    <div class="qr-code">
                        <img src="https://api.qrserver.com/v1/create-qr-code/?size=250x250&data=<?php echo urlencode($qrUrl); ?>" alt="QR Code">
                    </div>
                    <p class="info-text">
                        <strong>Scansiona questo QR Code con il tuo telefono</strong><br>
                        Verrai reindirizzato al form di registrazione dove potrai inserire il tuo numero
                    </p>
                </div>
                
                <div class="divider"></div>
                
                <h3 style="color: #333; margin-bottom: 15px;">✍️ Oppure inserisci il tuo numero qui:</h3>
                <form method="GET">
                    <input 
                        type="tel" 
                        name="from" 
                        class="phone-input" 
                        placeholder="Inserisci il tuo numero (es: 3901234567)"
                        pattern="[0-9]{10,15}"
                        required
                    >
                    <button type="submit" class="button">
                        Procedi con la Registrazione
                    </button>
                </form>
                
                <div class="feature-box">
                    <h4 style="color: #667eea; margin-bottom: 10px;">📋 Come Funziona:</h4>
                    <ol style="text-align: left; color: #666; font-size: 14px;">
                        <li>Scansiona il QR Code o inserisci il tuo numero</li>
                        <li>Conferma l'invio del messaggio di benvenuto</li>
                        <li>Ricevi automaticamente il messaggio su WhatsApp</li>
                    </ol>
                </div>
                
            <?php else: ?>
                <!-- Mostra conferma e invia messaggio -->
                <div style="background: #e8f5e9; padding: 15px; border-radius: 10px; margin-bottom: 20px;">
                    <p style="color: #2e7d32; font-weight: bold;">
                        📱 Numero registrante: <?php echo htmlspecialchars($senderPhone); ?>
                    </p>
                </div>
                
                <p style="color: #666; margin-bottom: 20px;">
                    Destinatario messaggio: <strong><?php echo $phone; ?></strong>
                </p>
                
                <div class="message-preview">
                    <h3>Messaggio che verrà inviato:</h3>
                    <p><?php echo nl2br(htmlspecialchars($message)); ?></p>
                </div>
                
                <form method="GET">
                    <input type="hidden" name="from" value="<?php echo htmlspecialchars($senderPhone); ?>">
                    <input type="hidden" name="send" value="1">
                    <button type="submit" class="button">
                        🚀 Invia Messaggio di Benvenuto
                    </button>
                </form>
                
                <a href="?" style="color: #667eea; text-decoration: none; display: inline-block; margin-top: 15px;">
                    ← Torna al QR Code
                </a>
            <?php endif; ?>
        </div>
    </body>
    </html>
    <?php
} else if (isset($_GET['send']) && $_GET['send'] == '1' && !empty($senderPhone)) {
    // Esegui invio messaggio
    $url = "https://api.Mail2Wa.it/?action=send&apiKey=" . $apiKey;
    $data = json_encode([
        'to' => $phone,
        'message' => $message
    ]);
    
    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
    curl_setopt($ch, CURLOPT_HTTPHEADER, ['Content-Type: application/json']);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    
    $result = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    ?>
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Messaggio Inviato</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                display: flex;
                justify-content: center;
                align-items: center;
                margin: 0;
                padding: 20px;
            }
            .container {
                background: white;
                border-radius: 20px;
                padding: 40px;
                max-width: 500px;
                width: 100%;
                box-shadow: 0 20px 60px rgba(0,0,0,0.3);
                text-align: center;
            }
            .success-icon {
                font-size: 80px;
                margin-bottom: 20px;
            }
            .button {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                border: none;
                padding: 15px 30px;
                border-radius: 10px;
                font-size: 16px;
                font-weight: bold;
                cursor: pointer;
                margin-top: 20px;
                text-decoration: none;
                display: inline-block;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <?php if ($httpCode == 200 || strpos($result, 'success') !== false): ?>
                <div class="success-icon">✅</div>
                <h1 style="color: #28a745;">Messaggio Inviato con Successo!</h1>
                <p style="color: #666; margin: 20px 0;">
                    Il messaggio di benvenuto è stato inviato a:<br>
                    <strong><?php echo htmlspecialchars($phone); ?></strong>
                </p>
                <p style="color: #666; background: #f8f9fa; padding: 15px; border-radius: 10px;">
                    Numero registrato: <strong><?php echo htmlspecialchars($senderPhone); ?></strong>
                </p>
            <?php else: ?>
                <div class="success-icon">❌</div>
                <h1 style="color: #dc3545;">Errore nell'invio</h1>
                <p style="color: #666; margin: 20px 0;">
                    Si è verificato un errore durante l'invio del messaggio.
                </p>
                <p style="color: #721c24; background: #f8d7da; padding: 15px; border-radius: 10px;">
                    <?php echo htmlspecialchars($result); ?>
                </p>
            <?php endif; ?>
            
            <a href="?" class="button">
                🔄 Nuova Registrazione
            </a>
        </div>
    </body>
    </html>
    <?php
}
?>`;

                // Mostra il codice PHP da copiare
                const blob = new Blob([phpCode], { type: 'text/plain' });
                const url = URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = 'send-welcome.php';
                a.click();
                
                setQrLoading(false);
                showStatus('✅ File PHP scaricato! Caricalo sul tuo server. Il file genera automaticamente il QR Code della pagina stessa', 'success');
            };

            // Generate cURL commands
            const generateTextCurl = () => {
                if (!apiKey || !phone || !message) return '';
                
                const apiUrl = `https://api.Mail2Wa.it/?action=send&apiKey=${apiKey}`;
                const postData = {
                    to: phone,
                    message: message
                };

                return `curl -X POST '${apiUrl}' \\
  -H 'Content-Type: application/json' \\
  -d '${JSON.stringify(postData)}'`;
            };

            const generateMediaCurl = () => {
                if (!apiKey || !phone || !message || !selectedFile) return '';
                
                const apiUrl = `https://api.Mail2Wa.it/?action=sendMedia&apiKey=${apiKey}`;
                
                return `# Prima converti il file in base64:
base64 ${selectedFile.name} > file.b64

# Poi esegui:
curl -X POST '${apiUrl}' \\
  -H 'Content-Type: application/json' \\
  -d '{
    "to": "${phone}",
    "message": "${message}",
    "fileContent": "'$(cat file.b64)'",
    "fileName": "${selectedFile.name}",
    "fileContentType": "${selectedFile.type || 'application/pdf'}"
  }'`;
            };

            const generateWelcomeCurl = () => {
                if (!apiKey || !welcomePhone || !welcomeMessage) return '';
                
                const apiUrl = `https://api.Mail2Wa.it/?action=send&apiKey=${apiKey}`;
                const postData = {
                    to: welcomePhone,
                    message: welcomeMessage.replace('{{SENDER_PHONE}}', '3901234567')
                };

                return `curl -X POST '${apiUrl}' \\
  -H 'Content-Type: application/json' \\
  -d '${JSON.stringify(postData)}'`;
            };

            // Copy to clipboard
            const copyToClipboard = (text, label) => {
                navigator.clipboard.writeText(text).then(() => {
                    showStatus(`📋 ${label} copiato!`, 'success');
                }).catch(() => {
                    const textArea = document.createElement('textarea');
                    textArea.value = text;
                    document.body.appendChild(textArea);
                    textArea.select();
                    document.execCommand('copy');
                    document.body.removeChild(textArea);
                    showStatus(`📋 ${label} copiato!`, 'success');
                });
            };

            // Icons
            const Icons = {
                Send: () => <svg className="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8" /></svg>,
                Upload: () => <svg className="h-8 w-8" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" /></svg>,
                MessageCircle: () => <svg className="h-8 w-8" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" /></svg>,
                Copy: () => <svg className="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><rect x="9" y="9" width="13" height="13" rx="2" ry="2" strokeWidth={2}/><path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 15H4a2 2 0 01-2-2V4a2 2 0 012-2h9a2 2 0 012 2v1" /></svg>,
                Terminal: () => <svg className="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 7l6 6-6 6M12 17h8" /></svg>,
                QrCode: () => <svg className="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><rect x="3" y="3" width="7" height="7" strokeWidth={2}/><rect x="14" y="3" width="7" height="7" strokeWidth={2}/><rect x="3" y="14" width="7" height="7" strokeWidth={2}/><rect x="14" y="14" width="7" height="7" strokeWidth={2}/></svg>,
                Server: () => <svg className="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><rect x="2" y="2" width="20" height="8" rx="2" ry="2" strokeWidth={2}/><rect x="2" y="14" width="20" height="8" rx="2" ry="2" strokeWidth={2}/><line x1="6" y1="6" x2="6.01" y2="6" strokeWidth={2}/><line x1="6" y1="18" x2="6.01" y2="18" strokeWidth={2}/></svg>
            };

            return (
                <div className="min-h-screen bg-gradient-to-br from-blue-600 via-purple-600 to-indigo-800 p-4">
                    <div className="max-w-7xl mx-auto">
                        {/* Header */}
                        <div className="text-center mb-8">
                            <h1 className="text-4xl font-bold text-white mb-2">Mail2WA API Sender</h1>
                            <p className="text-white/80">Invia messaggi WhatsApp tramite API</p>
                        </div>

                        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                            {/* Main Form - NON MODIFICATO */}
                            <div className="bg-white/90 backdrop-blur-sm rounded-3xl p-6 shadow-2xl">
                                <div className="flex items-center gap-3 mb-6">
                                    <Icons.MessageCircle />
                                    <h2 className="text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                                        Configurazione Messaggio
                                    </h2>
                                </div>

                                {/* Form Fields */}
                                <div className="space-y-4">
                                    <div>
                                        <label className="block text-sm font-semibold text-gray-700 mb-2">
                                            🔑 API Key *
                                        </label>
                                        <input
                                            type="password"
                                            value={apiKey}
                                            onChange={(e) => setApiKey(e.target.value)}
                                            className="w-full p-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 focus:outline-none transition-colors"
                                            placeholder="Inserisci la tua API Key"
                                        />
                                    </div>

                                    <div>
                                        <label className="block text-sm font-semibold text-gray-700 mb-2">
                                            📞 Numero Destinatario *
                                        </label>
                                        <input
                                            type="tel"
                                            value={phone}
                                            onChange={(e) => setPhone(e.target.value.replace(/\D/g, ''))}
                                            className="w-full p-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 focus:outline-none transition-colors"
                                            placeholder="3901234567"
                                        />
                                    </div>

                                    {/* Message Type Toggle */}
                                    <div className="flex items-center justify-center gap-4 p-4 bg-gray-50 rounded-xl">
                                        <span className={`font-semibold ${!isMediaMode ? 'text-blue-600' : 'text-gray-400'}`}>
                                            💬 Testo
                                        </span>
                                        <button
                                            onClick={() => {
                                                setIsMediaMode(!isMediaMode);
                                                if (isMediaMode) {
                                                    setSelectedFile(null);
                                                    setFileBase64('');
                                                }
                                            }}
                                            className={`relative w-14 h-7 rounded-full transition-colors ${
                                                isMediaMode ? 'bg-blue-600' : 'bg-gray-300'
                                            }`}
                                        >
                                            <div className={`absolute top-1 w-5 h-5 bg-white rounded-full transition-transform ${
                                                isMediaMode ? 'translate-x-7' : 'translate-x-1'
                                            }`} />
                                        </button>
                                        <span className={`font-semibold ${isMediaMode ? 'text-blue-600' : 'text-gray-400'}`}>
                                            📎 Media
                                        </span>
                                    </div>

                                    <div>
                                        <label className="block text-sm font-semibold text-gray-700 mb-2">
                                            ✉️ Messaggio *
                                        </label>
                                        <textarea
                                            value={message}
                                            onChange={(e) => setMessage(e.target.value)}
                                            className="w-full p-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 focus:outline-none transition-colors h-24 resize-none"
                                            placeholder="Scrivi il tuo messaggio qui..."
                                        />
                                    </div>

                                    {/* File Upload */}
                                    {isMediaMode && (
                                        <div>
                                            <label className="block text-sm font-semibold text-gray-700 mb-2">
                                                📁 File da allegare
                                            </label>
                                            <div className="border-2 border-dashed border-gray-300 rounded-xl p-6 text-center hover:border-blue-500 transition-colors">
                                                <input
                                                    type="file"
                                                    onChange={(e) => handleFileSelect(e.target.files[0])}
                                                    className="hidden"
                                                    id="fileInput"
                                                    accept=".pdf,.jpg,.jpeg,.png,.gif,.doc,.docx"
                                                />
                                                <label htmlFor="fileInput" className="cursor-pointer">
                                                    <Icons.Upload />
                                                    <p className="text-gray-600">
                                                        {selectedFile ? selectedFile.name : 'Clicca per selezionare'}
                                                    </p>
                                                </label>
                                            </div>
                                        </div>
                                    )}

                                    {/* cURL Command */}
                                    {(apiKey && phone && message) && (
                                        <div>
                                            <div className="flex items-center justify-between mb-2">
                                                <h3 className="font-semibold text-gray-700">📟 Comando cURL</h3>
                                                <button
                                                    onClick={() => copyToClipboard(
                                                        isMediaMode ? generateMediaCurl() : generateTextCurl(),
                                                        'Comando cURL'
                                                    )}
                                                    className="text-blue-600 hover:text-blue-700"
                                                >
                                                    <Icons.Copy />
                                                </button>
                                            </div>
                                            <div className="bg-gray-900 text-green-400 p-4 rounded-xl font-mono text-xs overflow-x-auto">
                                                <pre>{isMediaMode ? generateMediaCurl() : generateTextCurl()}</pre>
                                            </div>
                                        </div>
                                    )}

                                    {/* Status */}
                                    {status.text && (
                                        <div className={`p-3 rounded-lg text-center font-semibold ${
                                            status.type === 'success' ? 'bg-green-100 text-green-800' :
                                            status.type === 'error' ? 'bg-red-100 text-red-800' :
                                            'bg-yellow-100 text-yellow-800'
                                        }`}>
                                            {status.text}
                                        </div>
                                    )}
                                </div>
                            </div>

                            {/* Welcome QR Generator - AGGIORNATO */}
                            <div className="bg-white/90 backdrop-blur-sm rounded-3xl p-6 shadow-2xl">
                                <div className="flex items-center gap-3 mb-6">
                                    <Icons.QrCode />
                                    <h2 className="text-2xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
                                        QR Code di Benvenuto
                                    </h2>
                                </div>

                                <div className="space-y-4">
                                    <div className="bg-green-50 border-2 border-green-200 rounded-xl p-4">
                                        <h3 className="font-semibold text-green-800 mb-2">
                                            ✨ Funzionalità Avanzate
                                        </h3>
                                        <ul className="text-sm text-green-700 space-y-1">
                                            <li>✅ QR Code generato automaticamente dalla pagina PHP</li>
                                            <li>✅ Form per inserire il numero del mittente</li>
                                            <li>✅ Numero mittente incluso nel messaggio di benvenuto</li>
                                            <li>✅ Design professionale mantenuto</li>
                                        </ul>
                                    </div>

                                    <div>
                                        <label className="block text-sm font-semibold text-gray-700 mb-2">
                                            📱 Numero Destinatario Benvenuto *
                                        </label>
                                        <input
                                            type="tel"
                                            value={welcomePhone}
                                            onChange={(e) => setWelcomePhone(e.target.value.replace(/\D/g, ''))}
                                            className="w-full p-3 border-2 border-gray-200 rounded-xl focus:border-purple-500 focus:outline-none transition-colors"
                                            placeholder="3901234567"
                                        />
                                    </div>

                                    <div>
                                        <label className="block text-sm font-semibold text-gray-700 mb-2">
                                            🎉 Messaggio di Benvenuto
                                        </label>
                                        <textarea
                                            value={welcomeMessage}
                                            onChange={(e) => setWelcomeMessage(e.target.value)}
                                            className="w-full p-3 border-2 border-gray-200 rounded-xl focus:border-purple-500 focus:outline-none transition-colors h-32 resize-none"
                                            placeholder="Usa {{SENDER_PHONE}} per includere il numero del mittente"
                                        />
                                        <p className="text-xs text-gray-500 mt-1">
                                            Usa <code className="bg-gray-100 px-1 rounded">{'{{SENDER_PHONE}}'}</code> per includere il numero del mittente
                                        </p>
                                    </div>

                                    <button
                                        onClick={generateWelcomeQRWithPHP}
                                        disabled={qrLoading || !apiKey || !welcomePhone || !welcomeMessage}
                                        className="w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white py-3 px-6 rounded-xl font-semibold flex items-center justify-center gap-2 transition-all duration-200 hover:scale-105 disabled:opacity-50"
                                    >
                                        {qrLoading ? (
                                            <div className="animate-spin h-5 w-5 border-2 border-white border-t-transparent rounded-full" />
                                        ) : (
                                            <Icons.Server />
                                        )}
                                        {qrLoading ? 'Generazione...' : '📥 Genera Script PHP con QR'}
                                    </button>

                                    {/* Welcome cURL for testing */}
                                    {(apiKey && welcomePhone && welcomeMessage) && (
                                        <div>
                                            <div className="flex items-center justify-between mb-2">
                                                <h3 className="font-semibold text-gray-700 text-sm">Test manuale</h3>
                                                <button
                                                    onClick={() => copyToClipboard(generateWelcomeCurl(), 'Comando cURL')}
                                                    className="text-blue-600 hover:text-blue-700"
                                                >
                                                    <Icons.Copy />
                                                </button>
                                            </div>
                                            <div className="bg-gray-900 text-green-400 p-3 rounded-lg font-mono text-xs overflow-x-auto">
                                                <pre>{generateWelcomeCurl()}</pre>
                                            </div>
                                        </div>
                                    )}

                                    <div className="bg-blue-50 border-2 border-blue-200 rounded-xl p-3">
                                        <p className="text-sm text-blue-800">
                                            💡 <strong>Come funziona:</strong><br />
                                            1. Il file PHP genera automaticamente il QR Code della propria pagina<br />
                                            2. Chi scansiona inserisce il proprio numero<br />
                                            3. Il numero viene incluso nel messaggio di benvenuto
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            );
        };

        // Render
        ReactDOM.render(<Mail2WAApp />, document.getElementById('root'));
    </script>
</body>
</html>

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
FILE: plugin-dumper.php
SIZE: 15.84 KB
MODIFIED: 2025-08-12 21:05:26
--------------------------------------------------------------------------------
<?php
/**
 * Plugin Dumper - Genera dump completo del plugin
 * Versione: 1.0
 * Autore: Alby Dev
 */

// Sicurezza: previeni accesso diretto
if (!defined('ABSPATH')) {
    define('ABSPATH', dirname(__FILE__) . '/../../../../');
}

class PluginDumper {
    
    private $plugin_path;
    private $plugin_name;
    private $dump_file;
    private $excluded_extensions = ['zip', 'tar', 'gz', 'rar', '7z', 'exe', 'bin'];
    private $max_file_size = 10 * 1024 * 1024; // 10MB max per file
    
    public function __construct() {
        $this->plugin_path = dirname(__FILE__);
        $this->plugin_name = basename($this->plugin_path);
        $this->dump_file = $this->plugin_path . '/dump_' . $this->plugin_name . '_' . date('Y-m-d_H-i-s') . '.txt';
        
        $this->handleRequest();
    }
    
    private function handleRequest() {
        if (isset($_POST['generate_dump'])) {
            $this->generateDump();
        } elseif (isset($_GET['download']) && file_exists($_GET['download'])) {
            $this->downloadFile($_GET['download']);
        } else {
            $this->showInterface();
        }
    }
    
    private function generateDump() {
        try {
            $content = $this->buildDumpContent();
            
            // Comprimi il contenuto usando gzip
            $compressed_content = gzencode($content, 9);
            
            if (file_put_contents($this->dump_file . '.gz', $compressed_content)) {
                $this->showInterface("✅ Dump creato con successo!", $this->dump_file . '.gz');
            } else {
                throw new Exception("Errore nella scrittura del file dump");
            }
            
        } catch (Exception $e) {
            $this->showInterface("❌ Errore: " . $e->getMessage());
        }
    }
    
    private function buildDumpContent() {
        $content = $this->getHeader();
        $content .= $this->getDirectoryTree();
        $content .= $this->getFileContents();
        $content .= $this->getFooter();
        
        return $content;
    }
    
    private function getHeader() {
        $stats = $this->getPluginStats();
        
        return "
╔══════════════════════════════════════════════════════════════════════════════╗
║                              PLUGIN DUMP REPORT                             ║
╠══════════════════════════════════════════════════════════════════════════════╣
║ Plugin: {$this->plugin_name}
║ Generato: " . date('Y-m-d H:i:s') . "
║ Path: {$this->plugin_path}
║ Totale file: {$stats['files']}
║ Totale directory: {$stats['dirs']}
║ Dimensione totale: " . $this->formatBytes($stats['size']) . "
╚══════════════════════════════════════════════════════════════════════════════╝

";
    }
    
    private function getDirectoryTree() {
        $content = "\n" . str_repeat("=", 80) . "\n";
        $content .= "STRUTTURA DIRECTORY\n";
        $content .= str_repeat("=", 80) . "\n\n";
        
        $content .= $this->buildTree($this->plugin_path, '', true);
        
        return $content . "\n";
    }
    
    private function buildTree($dir, $prefix = '', $isLast = true) {
        $tree = '';
        $items = $this->scanDirectory($dir);
        
        if (empty($items)) return $tree;
        
        foreach ($items as $index => $item) {
            $isLastItem = ($index === count($items) - 1);
            $currentPrefix = $prefix . ($isLastItem ? '└── ' : '├── ');
            
            $tree .= $currentPrefix . basename($item) . "\n";
            
            if (is_dir($item)) {
                $nextPrefix = $prefix . ($isLastItem ? '    ' : '│   ');
                $tree .= $this->buildTree($item, $nextPrefix, $isLastItem);
            }
        }
        
        return $tree;
    }
    
    private function getFileContents() {
        $content = "\n" . str_repeat("=", 80) . "\n";
        $content .= "CONTENUTO FILE\n";
        $content .= str_repeat("=", 80) . "\n\n";
        
        $files = $this->getAllFiles($this->plugin_path);
        
        foreach ($files as $file) {
            $relativePath = str_replace($this->plugin_path . '/', '', $file);
            $content .= $this->getFileSection($file, $relativePath);
        }
        
        return $content;
    }
    
    private function getFileSection($filePath, $relativePath) {
        $section = "\n" . str_repeat("-", 80) . "\n";
        $section .= "FILE: {$relativePath}\n";
        $section .= "SIZE: " . $this->formatBytes(filesize($filePath)) . "\n";
        $section .= "MODIFIED: " . date('Y-m-d H:i:s', filemtime($filePath)) . "\n";
        $section .= str_repeat("-", 80) . "\n";
        
        if (!$this->isTextFile($filePath) || filesize($filePath) > $this->max_file_size) {
            $section .= "[BINARY FILE OR TOO LARGE - CONTENT SKIPPED]\n";
        } else {
            $fileContent = file_get_contents($filePath);
            $section .= $fileContent . "\n";
        }
        
        $section .= "\n" . str_repeat("-", 80) . "\n";
        
        return $section;
    }
    
    private function getFooter() {
        return "\n\n" . str_repeat("=", 80) . "\n" .
               "FINE DUMP - Generato da Plugin Dumper v1.0\n" .
               str_repeat("=", 80) . "\n";
    }
    
    private function scanDirectory($dir) {
        $items = [];
        $files = scandir($dir);
        
        foreach ($files as $file) {
            if ($file === '.' || $file === '..' || $this->shouldSkip($file)) {
                continue;
            }
            
            $fullPath = $dir . '/' . $file;
            $items[] = $fullPath;
        }
        
        // Ordina: directory prima, poi file
        usort($items, function($a, $b) {
            $aIsDir = is_dir($a);
            $bIsDir = is_dir($b);
            
            if ($aIsDir && !$bIsDir) return -1;
            if (!$aIsDir && $bIsDir) return 1;
            
            return strcasecmp(basename($a), basename($b));
        });
        
        return $items;
    }
    
    private function getAllFiles($dir) {
        $files = [];
        $items = $this->scanDirectory($dir);
        
        foreach ($items as $item) {
            if (is_file($item)) {
                $files[] = $item;
            } elseif (is_dir($item)) {
                $files = array_merge($files, $this->getAllFiles($item));
            }
        }
        
        return $files;
    }
    
    private function shouldSkip($filename) {
        // Skip file temporanei e dump precedenti
        if (strpos($filename, 'dump_') === 0) return true;
        if (in_array($filename, ['.DS_Store', 'Thumbs.db', '.git', '.svn', 'node_modules'])) return true;
        
        $ext = strtolower(pathinfo($filename, PATHINFO_EXTENSION));
        return in_array($ext, $this->excluded_extensions);
    }
    
    private function isTextFile($filePath) {
        $textExtensions = ['php', 'js', 'css', 'html', 'htm', 'txt', 'json', 'xml', 'sql', 'md', 'yml', 'yaml', 'ini', 'conf'];
        $ext = strtolower(pathinfo($filePath, PATHINFO_EXTENSION));
        
        if (in_array($ext, $textExtensions)) return true;
        
        // Check mime type per file senza estensione
        $finfo = finfo_open(FILEINFO_MIME_TYPE);
        $mimeType = finfo_file($finfo, $filePath);
        finfo_close($finfo);
        
        return strpos($mimeType, 'text/') === 0;
    }
    
    private function getPluginStats() {
        $stats = ['files' => 0, 'dirs' => 0, 'size' => 0];
        $this->calculateStats($this->plugin_path, $stats);
        return $stats;
    }
    
    private function calculateStats($dir, &$stats) {
        $items = $this->scanDirectory($dir);
        
        foreach ($items as $item) {
            if (is_file($item)) {
                $stats['files']++;
                $stats['size'] += filesize($item);
            } elseif (is_dir($item)) {
                $stats['dirs']++;
                $this->calculateStats($item, $stats);
            }
        }
    }
    
    private function formatBytes($size, $precision = 2) {
        $units = ['B', 'KB', 'MB', 'GB'];
        
        for ($i = 0; $size > 1024 && $i < count($units) - 1; $i++) {
            $size /= 1024;
        }
        
        return round($size, $precision) . ' ' . $units[$i];
    }
    
    private function downloadFile($filePath) {
        if (!file_exists($filePath)) {
            die("File non trovato");
        }
        
        $filename = basename($filePath);
        
        header('Content-Type: application/octet-stream');
        header('Content-Disposition: attachment; filename="' . $filename . '"');
        header('Content-Length: ' . filesize($filePath));
        header('Cache-Control: must-revalidate');
        
        readfile($filePath);
        exit;
    }
    
    private function showInterface($message = '', $dumpFile = '') {
        ?>
        <!DOCTYPE html>
        <html lang="it">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Plugin Dumper - <?php echo $this->plugin_name; ?></title>
            <style>
                * { margin: 0; padding: 0; box-sizing: border-box; }
                body {
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    min-height: 100vh;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    padding: 20px;
                }
                .container {
                    background: white;
                    border-radius: 20px;
                    box-shadow: 0 20px 40px rgba(0,0,0,0.1);
                    padding: 40px;
                    max-width: 600px;
                    width: 100%;
                    text-align: center;
                }
                h1 {
                    color: #333;
                    margin-bottom: 10px;
                    font-size: 2.5em;
                }
                .subtitle {
                    color: #666;
                    margin-bottom: 30px;
                    font-size: 1.1em;
                }
                .plugin-info {
                    background: #f8f9fa;
                    border-radius: 10px;
                    padding: 20px;
                    margin: 20px 0;
                    text-align: left;
                }
                .info-row {
                    display: flex;
                    justify-content: space-between;
                    margin: 10px 0;
                    padding: 5px 0;
                    border-bottom: 1px solid #eee;
                }
                .info-row:last-child { border-bottom: none; }
                .btn {
                    background: linear-gradient(45deg, #667eea, #764ba2);
                    color: white;
                    border: none;
                    padding: 15px 30px;
                    border-radius: 50px;
                    font-size: 1.1em;
                    font-weight: 600;
                    cursor: pointer;
                    transition: all 0.3s ease;
                    text-decoration: none;
                    display: inline-block;
                    margin: 10px;
                }
                .btn:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 10px 20px rgba(0,0,0,0.2);
                }
                .btn.success {
                    background: linear-gradient(45deg, #56ab2f, #a8e6cf);
                }
                .message {
                    padding: 15px;
                    border-radius: 10px;
                    margin: 20px 0;
                    font-weight: 600;
                }
                .message.success {
                    background: #d4edda;
                    color: #155724;
                    border: 1px solid #c3e6cb;
                }
                .message.error {
                    background: #f8d7da;
                    color: #721c24;
                    border: 1px solid #f5c6cb;
                }
                .loading {
                    display: none;
                    margin: 20px 0;
                }
                .spinner {
                    border: 3px solid #f3f3f3;
                    border-top: 3px solid #667eea;
                    border-radius: 50%;
                    width: 30px;
                    height: 30px;
                    animation: spin 1s linear infinite;
                    margin: 0 auto;
                }
                @keyframes spin {
                    0% { transform: rotate(0deg); }
                    100% { transform: rotate(360deg); }
                }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>🔧 Plugin Dumper</h1>
                <div class="subtitle">Genera dump completo del plugin</div>
                
                <div class="plugin-info">
                    <div class="info-row">
                        <strong>Plugin:</strong>
                        <span><?php echo $this->plugin_name; ?></span>
                    </div>
                    <div class="info-row">
                        <strong>Path:</strong>
                        <span><?php echo $this->plugin_path; ?></span>
                    </div>
                    <?php 
                    $stats = $this->getPluginStats();
                    ?>
                    <div class="info-row">
                        <strong>File totali:</strong>
                        <span><?php echo $stats['files']; ?></span>
                    </div>
                    <div class="info-row">
                        <strong>Directory:</strong>
                        <span><?php echo $stats['dirs']; ?></span>
                    </div>
                    <div class="info-row">
                        <strong>Dimensione:</strong>
                        <span><?php echo $this->formatBytes($stats['size']); ?></span>
                    </div>
                </div>
                
                <?php if ($message): ?>
                    <div class="message <?php echo strpos($message, '✅') !== false ? 'success' : 'error'; ?>">
                        <?php echo $message; ?>
                    </div>
                <?php endif; ?>
                
                <?php if ($dumpFile && file_exists($dumpFile)): ?>
                    <div>
                        <a href="?download=<?php echo urlencode($dumpFile); ?>" class="btn success">
                            📥 Scarica Dump (<?php echo $this->formatBytes(filesize($dumpFile)); ?>)
                        </a>
                    </div>
                <?php endif; ?>
                
                <form method="post" id="dumpForm">
                    <button type="submit" name="generate_dump" class="btn" onclick="showLoading()">
                        🚀 Genera Dump
                    </button>
                </form>
                
                <div class="loading" id="loading">
                    <div class="spinner"></div>
                    <p>Generazione dump in corso...</p>
                </div>
            </div>
            
            <script>
                function showLoading() {
                    document.getElementById('loading').style.display = 'block';
                    document.querySelector('.btn').style.display = 'none';
                }
            </script>
        </body>
        </html>
        <?php
    }
}

// Avvia il dumper
new PluginDumper();
?>

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
FILE: processed_emails.txt
SIZE: 2.51 KB
MODIFIED: 2025-08-13 00:28:24
--------------------------------------------------------------------------------
<pduXyKNORNMrwXaRiGomjekWJZmXvCPBNYxXwF6GLrU@upgradeservizi.eu>
<asMohQ3REzFCxxk5APNqb989jrJemOrTfQVT8LkIBA@upgradeservizi.eu>
<r1LAk15vYwfGY9brF8bNMBx9lknjpLjxMhhVs0qL0@upgradeservizi.eu>
<5BssKBjWU8lLI4ygYu6BR5WqsIjX2318olgZ1fOG4@upgradeservizi.eu>
<6ai127HJbypTDKc5owdca6xnKDpB6tNI9kHhnpWaE5A@upgradeservizi.eu>
<krAO3DdSN12AVDH77zhOrt09IgwTQkV3aLx3gcFbg@upgradeservizi.eu>
<xsnSHTtU6vjKMj1HzlTTfLeCPTIgHwgTC4evuUZlo@upgradeservizi.eu>
<Epa0jfTZMFie3RbWUUDiuVQzRRg0uWY3kO3yqtSMA@upgradeservizi.eu>
<etfwJTvcy5R2Zr4Ep7batXxDWBORzrbkAp87EQ9A@upgradeservizi.eu>
<PMViprVvQAXIwLH4Q1hD2wZsiJVKeIF8yesYGU3GGjU@upgradeservizi.eu>
<BVv9zijdUcMP3FaRPg2NCV8GW6iuVPUWsjljh30iq0@upgradeservizi.eu>
<8NlMRXzooOlUPsf6xnZJjRUtHFeFrSsuYtBN09ouNk@upgradeservizi.eu>
<AHOwQYMOJW2J7cszZPwhpsZt3qbDEhy7GGTJLFKeWs@upgradeservizi.eu>
<8SErSy4SaYU3CawDtiFgUe7DWkOJF8ijt2MMY4ackVo@upgradeservizi.eu>
<fhu5AIfCj173cXpbkJVKWQEk3vdhlzhI5WBq7UgI@upgradeservizi.eu>
<GvqvAPCQt8lKubPVoVy3fCfEnI1b91y6Qur26S3e8@upgradeservizi.eu>
<AFFbJFnPSp7Dn47GKXzlGOUjibeoeIQGgU80eD9Ngo@upgradeservizi.eu>
<oKrST4cTRawawktx34KbDmNRwdobqpNdrMaO8I34z8@upgradeservizi.eu>
<7G6cB8NCxQGZ2yfFIR5KO3YUDRNhSSIqLbICHCg2rA@upgradeservizi.eu>
<S4igk6r7ald60UtSzjObIuF9vRaoFFKJJrprCIAUnk@upgradeservizi.eu>
<bCUqg93wl7L275AXP0538KE3nHsHmFpFjTsODl9E@upgradeservizi.eu>
<nkbl5x1wIplKffPCDQaRZQA1KldaCj8wI8De9wL3yo@upgradeservizi.eu>
<Z12FpULlgIotL6PNU7jEliP7RetZRHGTlxdJs23IbU@upgradeservizi.eu>
<nAu07tRjwptSc5ZWjJ23eH9Eusd0rFDTtgPkC46FFOw@upgradeservizi.eu>
<De9uaLHNxCIBUEDPWSQRn4S7Zkw4TaDUlHJSY8ZXc@upgradeservizi.eu>
<Jr652scD5NGt676CiJat1UjxBux9eWA4LF0asNoJWc@upgradeservizi.eu>
<z6BMLocRSQB6dbv5Dmn4LPCk8QMxuMPGIvDSFKWKAKw@upgradeservizi.eu>
<ppcsAbtsiZrQj244ACsjw9tqwK9NkwiG62QWyaZQceY@upgradeservizi.eu>
<zZPonVuaG2lEoD4C8SzDXNjngPcQLrT0x68q1z2NHc@upgradeservizi.eu>
<PwK8CHywPxLk183nvkn2aZ50TtMOij83BlKm6DvpTg@upgradeservizi.eu>
<QkpVbLT6FIXyUsDzpcRnqn642ZLtNb2efb9Alo6HwmQ@upgradeservizi.eu>
<VWfiuBkffAGnlmOqy3TodWJzN3sGW0TxHPyGKSUg0@upgradeservizi.eu>
<ZXksXrzpM73TIWLic8wQXGJwdfUeT8HwEx1qFaSTg88@upgradeservizi.eu>
<2qLvSiiJpjcP4s2JeREehJjm38VTwyetlFuF7Vo@upgradeservizi.eu>
<TVxoL2ogQGAiC8NtXx26i0QgOCMS29bnkHNhx8uqk@upgradeservizi.eu>
<4XMuKjOPfDJI754dGklo8YfFX90f1RrQlt1RHQ2mM@upgradeservizi.eu>
<6MgAp8AvAVmvsJKEvX5G26TlAlieEm7GjGCqWTcrw@upgradeservizi.eu>
<dedaoEyWY1HNBc3Zs998lHKWZjuCCv9SNv0adByBo@upgradeservizi.eu>
<MPemACdHzA7wDm2UydEl0nxSTRZdNVpZx4MVHGsSr6g@upgradeservizi.eu>
<VrkPpzcfMmUKMzcznHqwEYTctPWZVrhEaRJP1Gbwc@upgradeservizi.eu>
<5uA1pnOStdR9NwGs4jvh1noZzC5WC7VdVovVUHeW8IU@upgradeservizi.eu>


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
FILE: send-welcome-advanced.php
SIZE: 27.42 KB
MODIFIED: 2025-08-12 23:18:36
--------------------------------------------------------------------------------
<?php
/**
 * Sistema Avanzato di Invio WhatsApp
 * Permette di specificare mittente e destinatario
 */

header('Access-Control-Allow-Origin: *');
header('Content-Type: text/html; charset=UTF-8');

$apiKey = '1f06d5c8bd0cd19f7c99b660b504bb25';
$defaultPhone = '393511845192';

// Database dei numeri registrati
$storage_file = __DIR__ . '/whatsapp_numbers.json';

// Carica database
$registered_numbers = [];
if (file_exists($storage_file)) {
    $registered_numbers = json_decode(file_get_contents($storage_file), true) ?: [];
}

// Gestione parametri
$senderPhone = isset($_REQUEST['sender']) ? $_REQUEST['sender'] : '';
$recipientPhone = isset($_REQUEST['recipient']) ? $_REQUEST['recipient'] : '';
$messageText = isset($_REQUEST['message']) ? $_REQUEST['message'] : '';
$action = isset($_REQUEST['action']) ? $_REQUEST['action'] : '';

// Template messaggi predefiniti
$templates = [
    'welcome' => '🎉 Benvenuto {{NAME}}! Il tuo numero {{SENDER_PHONE}} è stato registrato con successo.',
    'notification' => '📢 Hai ricevuto un nuovo messaggio da {{SENDER_PHONE}}',
    'confirmation' => '✅ La tua richiesta è stata confermata. Mittente: {{SENDER_PHONE}}, Destinatario: {{RECIPIENT_PHONE}}',
    'custom' => '{{MESSAGE}}'
];

// Processa invio messaggio
if ($action === 'send' && $recipientPhone && $messageText) {
    $finalMessage = str_replace(
        ['{{SENDER_PHONE}}', '{{RECIPIENT_PHONE}}', '{{MESSAGE}}'],
        [$senderPhone, $recipientPhone, $messageText],
        $messageText
    );
    
    $url = "https://api.Mail2Wa.it/?action=send&apiKey=" . $apiKey;
    $data = json_encode([
        'to' => $recipientPhone,
        'message' => $finalMessage
    ]);
    
    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
    curl_setopt($ch, CURLOPT_HTTPHEADER, ['Content-Type: application/json']);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    
    $result = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    // Log invio
    $log_file = __DIR__ . '/send_log.json';
    $log = [];
    if (file_exists($log_file)) {
        $log = json_decode(file_get_contents($log_file), true) ?: [];
    }
    $log[] = [
        'timestamp' => date('Y-m-d H:i:s'),
        'sender' => $senderPhone,
        'recipient' => $recipientPhone,
        'message' => $finalMessage,
        'status' => $httpCode == 200 ? 'success' : 'failed',
        'response' => $result
    ];
    file_put_contents($log_file, json_encode($log, JSON_PRETTY_PRINT));
    
    // Risposta JSON per API
    if (isset($_REQUEST['api']) && $_REQUEST['api'] == '1') {
        header('Content-Type: application/json');
        echo json_encode([
            'success' => $httpCode == 200,
            'sender' => $senderPhone,
            'recipient' => $recipientPhone,
            'message' => $finalMessage,
            'response' => $result
        ]);
        exit;
    }
}

// Carica log messaggi
$log_file = __DIR__ . '/send_log.json';
$message_log = [];
if (file_exists($log_file)) {
    $message_log = json_decode(file_get_contents($log_file), true) ?: [];
    $message_log = array_reverse(array_slice($message_log, -50)); // Ultimi 50 messaggi
}

?>
<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sistema Avanzato WhatsApp - Mittente e Destinatario</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
        }
        .header {
            text-align: center;
            color: white;
            margin-bottom: 30px;
        }
        .header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
        }
        .main-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 20px;
        }
        @media (max-width: 768px) {
            .main-grid {
                grid-template-columns: 1fr;
            }
        }
        .card {
            background: white;
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
        }
        .card h2 {
            color: #333;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        .form-group {
            margin-bottom: 20px;
        }
        .form-group label {
            display: block;
            color: #666;
            font-weight: 600;
            margin-bottom: 8px;
        }
        .form-control {
            width: 100%;
            padding: 12px;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            font-size: 15px;
            transition: all 0.3s;
        }
        .form-control:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }
        textarea.form-control {
            min-height: 120px;
            resize: vertical;
        }
        .phone-input-group {
            position: relative;
        }
        .phone-suggestions {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            border: 2px solid #667eea;
            border-radius: 10px;
            max-height: 200px;
            overflow-y: auto;
            display: none;
            z-index: 1000;
            margin-top: 5px;
        }
        .phone-suggestions.active {
            display: block;
        }
        .suggestion-item {
            padding: 10px 15px;
            cursor: pointer;
            border-bottom: 1px solid #f0f0f0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .suggestion-item:hover {
            background: #f8f9fa;
        }
        .suggestion-item .name {
            font-weight: 600;
            color: #333;
        }
        .suggestion-item .number {
            color: #666;
            font-size: 13px;
        }
        .template-buttons {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-bottom: 15px;
        }
        .template-btn {
            padding: 8px 15px;
            background: #f8f9fa;
            border: 2px solid #e0e0e0;
            border-radius: 20px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s;
        }
        .template-btn:hover {
            background: #667eea;
            color: white;
            border-color: #667eea;
        }
        .template-btn.active {
            background: #667eea;
            color: white;
            border-color: #667eea;
        }
        .button {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 10px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s;
            width: 100%;
        }
        .button:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
        }
        .button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        .button.success {
            background: linear-gradient(135deg, #56ab2f 0%, #a8e6cf 100%);
        }
        .button.whatsapp {
            background: linear-gradient(135deg, #25D366 0%, #128C7E 100%);
        }
        .swap-button {
            background: #f8f9fa;
            border: 2px solid #e0e0e0;
            padding: 10px;
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.3s;
            margin: 20px auto;
            display: block;
            width: 50px;
            height: 50px;
        }
        .swap-button:hover {
            background: #667eea;
            color: white;
            transform: rotate(180deg);
        }
        .status-message {
            padding: 15px;
            border-radius: 10px;
            margin: 20px 0;
            text-align: center;
            font-weight: 600;
        }
        .status-message.success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        .status-message.error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        .message-log {
            background: #f8f9fa;
            border-radius: 15px;
            padding: 20px;
            max-height: 400px;
            overflow-y: auto;
        }
        .log-item {
            background: white;
            padding: 15px;
            border-radius: 10px;
            margin-bottom: 10px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }
        .log-item .header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            font-size: 13px;
            color: #666;
        }
        .log-item .phones {
            display: flex;
            gap: 15px;
            margin-bottom: 10px;
        }
        .log-item .phone-badge {
            background: #667eea;
            color: white;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 12px;
        }
        .log-item .message {
            background: #f8f9fa;
            padding: 10px;
            border-radius: 8px;
            font-size: 14px;
            color: #333;
        }
        .log-item.success {
            border-left: 4px solid #28a745;
        }
        .log-item.failed {
            border-left: 4px solid #dc3545;
        }
        .variables-info {
            background: #fff3cd;
            border: 2px solid #ffc107;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 20px;
        }
        .variables-info h4 {
            color: #856404;
            margin-bottom: 10px;
        }
        .variables-info code {
            background: white;
            padding: 2px 5px;
            border-radius: 3px;
            font-family: monospace;
        }
        .qr-section {
            text-align: center;
            margin-top: 20px;
            padding-top: 20px;
            border-top: 1px solid #e0e0e0;
        }
        .qr-code {
            background: white;
            padding: 15px;
            border-radius: 10px;
            display: inline-block;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        .api-info {
            background: #e8f5e9;
            border: 2px solid #4caf50;
            border-radius: 10px;
            padding: 15px;
            margin-top: 20px;
        }
        .api-info h4 {
            color: #2e7d32;
            margin-bottom: 10px;
        }
        .api-info pre {
            background: #263238;
            color: #aed581;
            padding: 15px;
            border-radius: 8px;
            overflow-x: auto;
            font-size: 13px;
        }
        .char-counter {
            text-align: right;
            color: #666;
            font-size: 12px;
            margin-top: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>📱 Sistema Avanzato WhatsApp</h1>
            <p>Gestione completa mittente e destinatario</p>
        </div>

        <?php if ($action === 'send' && isset($httpCode)): ?>
            <div class="status-message <?php echo $httpCode == 200 ? 'success' : 'error'; ?>">
                <?php if ($httpCode == 200): ?>
                    ✅ Messaggio inviato con successo da <?php echo htmlspecialchars($senderPhone); ?> a <?php echo htmlspecialchars($recipientPhone); ?>
                <?php else: ?>
                    ❌ Errore nell'invio del messaggio
                <?php endif; ?>
            </div>
        <?php endif; ?>

        <div class="main-grid">
            <!-- Form di invio -->
            <div class="card">
                <h2>
                    <span>✉️</span>
                    Componi Messaggio
                </h2>

                <form method="POST" id="messageForm">
                    <input type="hidden" name="action" value="send">
                    
                    <div class="form-group">
                        <label for="sender">📤 Numero Mittente (opzionale)</label>
                        <div class="phone-input-group">
                            <input 
                                type="tel" 
                                id="sender"
                                name="sender" 
                                class="form-control"
                                placeholder="Es: 3901234567 (lascia vuoto se non necessario)"
                                value="<?php echo htmlspecialchars($senderPhone); ?>"
                                onkeyup="searchPhone(this, 'senderSuggestions')"
                            >
                            <div id="senderSuggestions" class="phone-suggestions"></div>
                        </div>
                    </div>

                    <button type="button" class="swap-button" onclick="swapNumbers()" title="Scambia mittente e destinatario">
                        ⇅
                    </button>

                    <div class="form-group">
                        <label for="recipient">📥 Numero Destinatario *</label>
                        <div class="phone-input-group">
                            <input 
                                type="tel" 
                                id="recipient"
                                name="recipient" 
                                class="form-control"
                                placeholder="Es: 3901234567"
                                value="<?php echo htmlspecialchars($recipientPhone); ?>"
                                required
                                onkeyup="searchPhone(this, 'recipientSuggestions')"
                            >
                            <div id="recipientSuggestions" class="phone-suggestions"></div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>📝 Template Messaggio</label>
                        <div class="template-buttons">
                            <button type="button" class="template-btn" onclick="useTemplate('welcome')">
                                🎉 Benvenuto
                            </button>
                            <button type="button" class="template-btn" onclick="useTemplate('notification')">
                                📢 Notifica
                            </button>
                            <button type="button" class="template-btn" onclick="useTemplate('confirmation')">
                                ✅ Conferma
                            </button>
                            <button type="button" class="template-btn active" onclick="useTemplate('custom')">
                                ✏️ Personalizzato
                            </button>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="message">💬 Messaggio *</label>
                        <textarea 
                            id="message"
                            name="message" 
                            class="form-control"
                            placeholder="Scrivi il tuo messaggio qui..."
                            required
                            onkeyup="updateCharCount()"
                        ><?php echo htmlspecialchars($messageText); ?></textarea>
                        <div class="char-counter">
                            <span id="charCount">0</span> / 4096 caratteri
                        </div>
                    </div>

                    <div class="variables-info">
                        <h4>🔧 Variabili Disponibili</h4>
                        <p>Puoi usare queste variabili nel messaggio:</p>
                        <ul style="text-align: left; margin-left: 20px; color: #856404;">
                            <li><code>{{SENDER_PHONE}}</code> - Numero mittente</li>
                            <li><code>{{RECIPIENT_PHONE}}</code> - Numero destinatario</li>
                            <li><code>{{NAME}}</code> - Nome del contatto</li>
                            <li><code>{{DATE}}</code> - Data corrente</li>
                            <li><code>{{TIME}}</code> - Ora corrente</li>
                        </ul>
                    </div>

                    <button type="submit" class="button" id="sendButton">
                        🚀 Invia Messaggio
                    </button>
                </form>

                <div class="qr-section">
                    <h4 style="margin-bottom: 15px;">📱 QR Code per Accesso Rapido</h4>
                    <div class="qr-code">
                        <img id="qrCode" src="" alt="QR Code" style="max-width: 200px;">
                    </div>
                </div>
            </div>

            <!-- Log e statistiche -->
            <div class="card">
                <h2>
                    <span>📊</span>
                    Cronologia Messaggi
                </h2>

                <?php if (!empty($registered_numbers)): ?>
                <div style="margin-bottom: 20px;">
                    <h4 style="color: #666; margin-bottom: 10px;">📱 Numeri Registrati (<?php echo count($registered_numbers); ?>)</h4>
                    <div style="display: flex; flex-wrap: wrap; gap: 10px;">
                        <?php foreach (array_slice($registered_numbers, 0, 10) as $num => $info): ?>
                            <span class="phone-badge" style="background: #667eea; color: white; padding: 5px 10px; border-radius: 20px; font-size: 12px; cursor: pointer;" onclick="setRecipient('<?php echo $num; ?>')">
                                <?php echo substr($num, 0, 6) . '...'; ?>
                            </span>
                        <?php endforeach; ?>
                    </div>
                </div>
                <?php endif; ?>

                <div class="message-log">
                    <?php if (empty($message_log)): ?>
                        <p style="text-align: center; color: #999;">Nessun messaggio inviato</p>
                    <?php else: ?>
                        <?php foreach ($message_log as $log): ?>
                            <div class="log-item <?php echo $log['status']; ?>">
                                <div class="header">
                                    <span>📅 <?php echo $log['timestamp']; ?></span>
                                    <span class="<?php echo $log['status'] == 'success' ? 'success' : 'error'; ?>" style="font-weight: bold;">
                                        <?php echo $log['status'] == 'success' ? '✅ Inviato' : '❌ Fallito'; ?>
                                    </span>
                                </div>
                                <div class="phones">
                                    <?php if ($log['sender']): ?>
                                        <span class="phone-badge" style="background: #6c757d;">
                                            Da: <?php echo htmlspecialchars($log['sender']); ?>
                                        </span>
                                    <?php endif; ?>
                                    <span class="phone-badge">
                                        A: <?php echo htmlspecialchars($log['recipient']); ?>
                                    </span>
                                </div>
                                <div class="message">
                                    <?php echo nl2br(htmlspecialchars(substr($log['message'], 0, 200))); ?>
                                    <?php if (strlen($log['message']) > 200): ?>...<?php endif; ?>
                                </div>
                            </div>
                        <?php endforeach; ?>
                    <?php endif; ?>
                </div>

                <div class="api-info">
                    <h4>🔌 Endpoint API</h4>
                    <p style="font-size: 14px; color: #2e7d32; margin-bottom: 10px;">
                        Puoi anche inviare messaggi via API:
                    </p>
                    <pre>curl -X POST "<?php echo (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? "https" : "http") . "://$_SERVER[HTTP_HOST]$_SERVER[REQUEST_URI]"; ?>" \
  -d "action=send" \
  -d "sender=3901234567" \
  -d "recipient=3909876543" \
  -d "message=Il tuo messaggio" \
  -d "api=1"</pre>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Database locale dei numeri
        const registeredNumbers = <?php echo json_encode($registered_numbers); ?>;
        
        // Template messaggi
        const templates = <?php echo json_encode($templates); ?>;
        
        // Inizializza
        document.addEventListener('DOMContentLoaded', function() {
            updateCharCount();
            generateQRCode();
        });

        // Ricerca numeri registrati
        function searchPhone(input, suggestionsId) {
            const query = input.value;
            const suggestionsDiv = document.getElementById(suggestionsId);
            
            if (query.length < 3) {
                suggestionsDiv.classList.remove('active');
                return;
            }
            
            const matches = Object.entries(registeredNumbers).filter(([num, info]) => {
                return num.includes(query) || 
                       (info.name && info.name.toLowerCase().includes(query.toLowerCase()));
            });
            
            if (matches.length > 0) {
                suggestionsDiv.innerHTML = matches.slice(0, 5).map(([num, info]) => `
                    <div class="suggestion-item" onclick="selectNumber('${input.id}', '${num}')">
                        <div>
                            <div class="name">${info.name || 'Senza nome'}</div>
                            <div class="number">${num}</div>
                        </div>
                        <span style="color: #667eea;">Messaggi: ${info.messages || 0}</span>
                    </div>
                `).join('');
                suggestionsDiv.classList.add('active');
            } else {
                suggestionsDiv.classList.remove('active');
            }
        }

        // Seleziona numero dai suggerimenti
        function selectNumber(inputId, number) {
            document.getElementById(inputId).value = number;
            document.querySelectorAll('.phone-suggestions').forEach(div => {
                div.classList.remove('active');
            });
        }

        // Scambia mittente e destinatario
        function swapNumbers() {
            const sender = document.getElementById('sender');
            const recipient = document.getElementById('recipient');
            const temp = sender.value;
            sender.value = recipient.value;
            recipient.value = temp;
        }

        // Usa template
        function useTemplate(templateName) {
            // Rimuovi active da tutti
            document.querySelectorAll('.template-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            
            // Aggiungi active al selezionato
            event.target.classList.add('active');
            
            // Imposta messaggio
            const messageField = document.getElementById('message');
            if (templates[templateName]) {
                let message = templates[templateName];
                
                // Sostituisci variabili di sistema
                message = message.replace('{{DATE}}', new Date().toLocaleDateString('it-IT'));
                message = message.replace('{{TIME}}', new Date().toLocaleTimeString('it-IT'));
                
                messageField.value = message;
                updateCharCount();
            }
        }

        // Conta caratteri
        function updateCharCount() {
            const message = document.getElementById('message').value;
            document.getElementById('charCount').textContent = message.length;
            
            // Cambia colore se troppo lungo
            const counter = document.querySelector('.char-counter');
            if (message.length > 4096) {
                counter.style.color = '#dc3545';
            } else if (message.length > 3500) {
                counter.style.color = '#ffc107';
            } else {
                counter.style.color = '#666';
            }
        }

        // Imposta destinatario
        function setRecipient(number) {
            document.getElementById('recipient').value = number;
        }

        // Genera QR Code
        function generateQRCode() {
            const currentUrl = window.location.href.split('?')[0];
            const qrUrl = `https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=${encodeURIComponent(currentUrl)}`;
            document.getElementById('qrCode').src = qrUrl;
        }

        // Validazione form
        document.getElementById('messageForm').addEventListener('submit', function(e) {
            const recipient = document.getElementById('recipient').value;
            const message = document.getElementById('message').value;
            
            if (!recipient || !message) {
                e.preventDefault();
                alert('Compila tutti i campi obbligatori');
                return false;
            }
            
            // Sostituisci variabili prima dell'invio
            let finalMessage = message;
            const sender = document.getElementById('sender').value;
            
            finalMessage = finalMessage.replace(/{{SENDER_PHONE}}/g, sender || 'Non specificato');
            finalMessage = finalMessage.replace(/{{RECIPIENT_PHONE}}/g, recipient);
            finalMessage = finalMessage.replace(/{{DATE}}/g, new Date().toLocaleDateString('it-IT'));
            finalMessage = finalMessage.replace(/{{TIME}}/g, new Date().toLocaleTimeString('it-IT'));
            
            document.getElementById('message').value = finalMessage;
            
            // Disabilita pulsante durante l'invio
            document.getElementById('sendButton').disabled = true;
            document.getElementById('sendButton').textContent = '⏳ Invio in corso...';
        });

        // Chiudi suggerimenti cliccando fuori
        document.addEventListener('click', function(e) {
            if (!e.target.closest('.phone-input-group')) {
                document.querySelectorAll('.phone-suggestions').forEach(div => {
                    div.classList.remove('active');
                });
            }
        });

        // Auto-refresh log ogni 30 secondi
        setInterval(() => {
            const currentAction = '<?php echo $action; ?>';
            if (!currentAction) {
                // Solo se non stiamo inviando un messaggio
                fetch(window.location.href + '?action=get_log')
                    .then(response => response.text())
                    .then(data => {
                        // Aggiorna solo il log se necessario
                    })
                    .catch(err => console.error(err));
            }
        }, 30000);
    </script>
</body>
</html>


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
FILE: send-welcome-auto.php
SIZE: 18.33 KB
MODIFIED: 2025-08-12 22:46:30
--------------------------------------------------------------------------------
<?php
/**
 * Sistema di Benvenuto WhatsApp con Auto-Detection
 * Integrato con wa2mail webhook
 */

header('Access-Control-Allow-Origin: *');
header('Content-Type: text/html; charset=UTF-8');

$apiKey = '1f06d5c8bd0cd19f7c99b660b504bb25';
$phone = '393511845192';
$messageTemplate = '🎉 Benvenuto {{NAME}}! Il tuo numero {{SENDER_PHONE}} è stato registrato con successo.';

// Database dei numeri registrati
$storage_file = __DIR__ . '/whatsapp_numbers.json';

// Carica database
$registered_numbers = [];
if (file_exists($storage_file)) {
    $registered_numbers = json_decode(file_get_contents($storage_file), true) ?: [];
}

// Ottieni numero dal parametro o dal database
$senderPhone = isset($_GET['from']) ? $_GET['from'] : '';
$senderName = '';

// Se abbiamo un numero, cerca info nel database
if ($senderPhone && isset($registered_numbers[$senderPhone])) {
    $senderName = $registered_numbers[$senderPhone]['name'] ?? '';
}

// Sostituisci placeholder
$message = str_replace('{{SENDER_PHONE}}', $senderPhone, $messageTemplate);
$message = str_replace('{{NAME}}', $senderName ?: 'amico', $message);

// URL corrente
$currentUrl = (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? "https" : "http") . "://$_SERVER[HTTP_HOST]$_SERVER[REQUEST_URI]";
$baseUrl = strtok($currentUrl, '?');

if ($_SERVER['REQUEST_METHOD'] === 'GET' && !isset($_GET['send'])) {
    ?>
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Sistema Benvenuto WhatsApp - Auto Detection</title>
        <style>
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                display: flex;
                justify-content: center;
                align-items: center;
                padding: 20px;
            }
            .container {
                background: white;
                border-radius: 20px;
                padding: 40px;
                max-width: 800px;
                width: 100%;
                box-shadow: 0 20px 60px rgba(0,0,0,0.3);
            }
            .logo {
                font-size: 60px;
                margin-bottom: 20px;
                text-align: center;
            }
            h1 {
                color: #333;
                margin-bottom: 20px;
                font-size: 28px;
                text-align: center;
            }
            .status-box {
                background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
                color: white;
                padding: 20px;
                border-radius: 15px;
                margin: 20px 0;
                text-align: center;
            }
            .registered-list {
                background: #f8f9fa;
                border-radius: 15px;
                padding: 20px;
                margin: 20px 0;
                max-height: 300px;
                overflow-y: auto;
            }
            .registered-item {
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding: 10px;
                margin: 5px 0;
                background: white;
                border-radius: 10px;
                box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            }
            .registered-item:hover {
                transform: translateX(5px);
                transition: all 0.3s;
            }
            .number-badge {
                background: #667eea;
                color: white;
                padding: 5px 10px;
                border-radius: 20px;
                font-size: 12px;
            }
            .button {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                border: none;
                padding: 15px 30px;
                border-radius: 10px;
                font-size: 16px;
                font-weight: bold;
                cursor: pointer;
                margin: 10px;
                transition: transform 0.2s;
                text-decoration: none;
                display: inline-block;
            }
            .button:hover {
                transform: scale(1.05);
            }
            .button.success {
                background: linear-gradient(135deg, #56ab2f 0%, #a8e6cf 100%);
            }
            .button.whatsapp {
                background: linear-gradient(135deg, #25D366 0%, #128C7E 100%);
            }
            .webhook-status {
                display: flex;
                align-items: center;
                justify-content: center;
                gap: 10px;
                padding: 15px;
                background: #e8f5e9;
                border-radius: 10px;
                margin: 20px 0;
            }
            .status-indicator {
                width: 12px;
                height: 12px;
                border-radius: 50%;
                background: #4caf50;
                animation: pulse 2s infinite;
            }
            @keyframes pulse {
                0% {
                    box-shadow: 0 0 0 0 rgba(76, 175, 80, 0.7);
                }
                70% {
                    box-shadow: 0 0 0 10px rgba(76, 175, 80, 0);
                }
                100% {
                    box-shadow: 0 0 0 0 rgba(76, 175, 80, 0);
                }
            }
            .instructions {
                background: #fff3cd;
                border: 2px solid #ffc107;
                border-radius: 10px;
                padding: 20px;
                margin: 20px 0;
            }
            .instructions h3 {
                color: #856404;
                margin-bottom: 10px;
            }
            .instructions ol {
                color: #856404;
                margin-left: 20px;
            }
            .instructions code {
                background: #fff;
                padding: 2px 5px;
                border-radius: 3px;
                font-family: monospace;
            }
            .phone-input {
                width: 100%;
                padding: 15px;
                border: 2px solid #e0e0e0;
                border-radius: 10px;
                font-size: 16px;
                margin: 10px 0;
            }
            .search-box {
                position: relative;
                margin: 20px 0;
            }
            .search-results {
                position: absolute;
                top: 100%;
                left: 0;
                right: 0;
                background: white;
                border: 2px solid #667eea;
                border-radius: 10px;
                max-height: 200px;
                overflow-y: auto;
                display: none;
                z-index: 1000;
            }
            .search-results.active {
                display: block;
            }
            .search-result-item {
                padding: 10px;
                cursor: pointer;
                border-bottom: 1px solid #eee;
            }
            .search-result-item:hover {
                background: #f0f0f0;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="logo">🚀</div>
            <h1>Sistema Benvenuto WhatsApp con Auto-Detection</h1>
            
            <div class="webhook-status">
                <div class="status-indicator"></div>
                <span><strong>WebHook wa2mail:</strong> Attivo e in ascolto</span>
            </div>
            
            <?php if (empty($senderPhone)): ?>
                
                <div class="instructions">
                    <h3>⚙️ Come Configurare il WebHook wa2mail:</h3>
                    <ol>
                        <li>Accedi al pannello Mail2Wa</li>
                        <li>Vai su "Configurazione WebHooks"</li>
                        <li>Inserisci questo URL: <code><?php echo $baseUrl; ?>/webhook-receiver.php</code></li>
                        <li>Salva la configurazione</li>
                        <li>Da quel momento, ogni messaggio ricevuto registrerà automaticamente il numero!</li>
                    </ol>
                </div>
                
                <?php if (!empty($registered_numbers)): ?>
                <div class="registered-list">
                    <h3 style="margin-bottom: 15px;">📱 Numeri Registrati Automaticamente (<?php echo count($registered_numbers); ?>)</h3>
                    <?php foreach ($registered_numbers as $num => $info): ?>
                        <div class="registered-item">
                            <div>
                                <strong><?php echo $info['name'] ?: 'Senza nome'; ?></strong>
                                <div style="color: #666; font-size: 12px;">
                                    <?php echo $num; ?> • Ultimo: <?php echo $info['last_seen']; ?>
                                </div>
                            </div>
                            <div>
                                <span class="number-badge"><?php echo $info['messages']; ?> msg</span>
                                <a href="?from=<?php echo $num; ?>" class="button" style="padding: 5px 15px; font-size: 12px;">
                                    Invia Welcome
                                </a>
                            </div>
                        </div>
                    <?php endforeach; ?>
                </div>
                <?php endif; ?>
                
                <div class="search-box">
                    <input 
                        type="text" 
                        id="searchPhone"
                        class="phone-input" 
                        placeholder="🔍 Cerca numero registrato o inserisci nuovo..."
                        onkeyup="searchNumbers(this.value)"
                    >
                    <div id="searchResults" class="search-results"></div>
                </div>
                
                <div style="text-align: center;">
                    <button onclick="manualSend()" class="button">
                        Procedi con Numero Inserito
                    </button>
                    
                    <a href="https://wa.me/<?php echo $phone; ?>?text=Registrami" class="button whatsapp">
                        Invia Messaggio per Auto-Registrazione
                    </a>
                </div>
                
                <div class="status-box">
                    <h3>📊 Statistiche Sistema</h3>
                    <p>Numeri registrati: <?php echo count($registered_numbers); ?></p>
                    <p>Messaggi totali: <?php echo array_sum(array_column($registered_numbers, 'messages')); ?></p>
                </div>
                
            <?php else: ?>
                <!-- Conferma invio -->
                <div style="background: #e8f5e9; padding: 20px; border-radius: 10px; margin-bottom: 20px; text-align: center;">
                    <h3 style="color: #2e7d32;">📱 Numero Selezionato</h3>
                    <p style="font-size: 24px; margin: 10px 0;">
                        <strong><?php echo htmlspecialchars($senderPhone); ?></strong>
                    </p>
                    <?php if ($senderName): ?>
                        <p style="color: #666;">Nome: <?php echo htmlspecialchars($senderName); ?></p>
                    <?php endif; ?>
                </div>
                
                <div style="background: #f8f9fa; border-radius: 15px; padding: 20px; margin: 20px 0;">
                    <h3 style="color: #667eea; margin-bottom: 10px;">Messaggio che verrà inviato:</h3>
                    <p style="white-space: pre-wrap;"><?php echo htmlspecialchars($message); ?></p>
                </div>
                
                <form method="GET" style="text-align: center;">
                    <input type="hidden" name="from" value="<?php echo htmlspecialchars($senderPhone); ?>">
                    <input type="hidden" name="send" value="1">
                    <button type="submit" class="button success">
                        🚀 Invia Messaggio di Benvenuto
                    </button>
                    <a href="?" class="button" style="background: #6c757d;">
                        ← Torna Indietro
                    </a>
                </form>
            <?php endif; ?>
        </div>
        
        <script>
            // Database locale dei numeri registrati
            const registeredNumbers = <?php echo json_encode($registered_numbers); ?>;
            
            function searchNumbers(query) {
                const results = document.getElementById('searchResults');
                
                if (query.length < 3) {
                    results.classList.remove('active');
                    return;
                }
                
                const matches = Object.entries(registeredNumbers).filter(([num, info]) => {
                    return num.includes(query) || 
                           (info.name && info.name.toLowerCase().includes(query.toLowerCase()));
                });
                
                if (matches.length > 0) {
                    results.innerHTML = matches.map(([num, info]) => `
                        <div class="search-result-item" onclick="selectNumber('${num}')">
                            <strong>${info.name || 'Senza nome'}</strong><br>
                            <small>${num}</small>
                        </div>
                    `).join('');
                    results.classList.add('active');
                } else {
                    results.classList.remove('active');
                }
            }
            
            function selectNumber(number) {
                document.getElementById('searchPhone').value = number;
                document.getElementById('searchResults').classList.remove('active');
            }
            
            function manualSend() {
                const phone = document.getElementById('searchPhone').value;
                if (phone) {
                    window.location.href = '?from=' + phone;
                } else {
                    alert('Inserisci un numero di telefono');
                }
            }
            
            // Polling per nuovi numeri registrati (ogni 10 secondi)
            setInterval(() => {
                fetch('webhook-receiver.php?action=list')
                    .then(response => response.json())
                    .then(data => {
                        if (data.count > Object.keys(registeredNumbers).length) {
                            location.reload();
                        }
                    })
                    .catch(err => console.error(err));
            }, 10000);
        </script>
    </body>
    </html>
    <?php
} else if (isset($_GET['send']) && $_GET['send'] == '1' && !empty($senderPhone)) {
    // Esegui invio messaggio
    $url = "https://api.Mail2Wa.it/?action=send&apiKey=" . $apiKey;
    $data = json_encode([
        'to' => $senderPhone, // Invia al numero del mittente
        'message' => $message
    ]);
    
    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
    curl_setopt($ch, CURLOPT_HTTPHEADER, ['Content-Type: application/json']);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    
    $result = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    // Aggiorna statistiche nel database
    if ($httpCode == 200 && file_exists($storage_file)) {
        $database = json_decode(file_get_contents($storage_file), true) ?: [];
        if (isset($database[$senderPhone])) {
            $database[$senderPhone]['welcome_sent'] = date('Y-m-d H:i:s');
            file_put_contents($storage_file, json_encode($database, JSON_PRETTY_PRINT));
        }
    }
    ?>
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Messaggio Inviato</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                display: flex;
                justify-content: center;
                align-items: center;
                padding: 20px;
            }
            .container {
                background: white;
                border-radius: 20px;
                padding: 40px;
                max-width: 500px;
                width: 100%;
                box-shadow: 0 20px 60px rgba(0,0,0,0.3);
                text-align: center;
            }
            .success-icon {
                font-size: 80px;
                margin-bottom: 20px;
            }
            .button {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                border: none;
                padding: 15px 30px;
                border-radius: 10px;
                font-size: 16px;
                font-weight: bold;
                cursor: pointer;
                margin-top: 20px;
                text-decoration: none;
                display: inline-block;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <?php if ($httpCode == 200): ?>
                <div class="success-icon">✅</div>
                <h1 style="color: #28a745;">Messaggio Inviato!</h1>
                <p style="color: #666; margin: 20px 0;">
                    Il messaggio di benvenuto è stato inviato a:<br>
                    <strong><?php echo htmlspecialchars($senderPhone); ?></strong>
                </p>
                <?php if ($senderName): ?>
                    <p style="color: #666;">Nome: <?php echo htmlspecialchars($senderName); ?></p>
                <?php endif; ?>
            <?php else: ?>
                <div class="success-icon">❌</div>
                <h1 style="color: #dc3545;">Errore nell'invio</h1>
                <p style="color: #666; margin: 20px 0;">
                    Si è verificato un errore durante l'invio del messaggio.
                </p>
            <?php endif; ?>
            
            <a href="?" class="button">
                🔄 Torna al Sistema
            </a>
        </div>
    </body>
    </html>
    <?php
}
?>


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
FILE: send-welcome.php
SIZE: 20.57 KB
MODIFIED: 2025-08-12 21:44:12
--------------------------------------------------------------------------------
<?php
// send-welcome.php - Versione avanzata con auto-detection numero

header('Access-Control-Allow-Origin: *');
header('Content-Type: text/html; charset=UTF-8');

$apiKey = '1f06d5c8bd0cd19f7c99b660b504bb25';
$phone = '393511845192';
$messageTemplate = '🎉 Benvenuto! Grazie per esserti registrato al nostro servizio. Il tuo numero {{SENDER_PHONE}} è stato registrato con successo.';

// METODO 1: Ottieni da parametro GET
$senderPhone = isset($_GET['from']) ? $_GET['from'] : '';

// METODO 2: Ottieni da WhatsApp Web URL (se aperto da WhatsApp)
if (empty($senderPhone) && isset($_SERVER['HTTP_REFERER'])) {
    if (strpos($_SERVER['HTTP_REFERER'], 'wa.me') !== false || 
        strpos($_SERVER['HTTP_REFERER'], 'api.whatsapp.com') !== false) {
        // Estrai numero dall'URL di WhatsApp se presente
        preg_match('/\d{10,15}/', $_SERVER['HTTP_REFERER'], $matches);
        if (!empty($matches[0])) {
            $senderPhone = $matches[0];
        }
    }
}

// METODO 3: Controlla User-Agent per WhatsApp
$isWhatsApp = false;
if (isset($_SERVER['HTTP_USER_AGENT'])) {
    $ua = strtolower($_SERVER['HTTP_USER_AGENT']);
    if (strpos($ua, 'whatsapp') !== false) {
        $isWhatsApp = true;
    }
}

// METODO 4: Genera link wa.me con pre-compilazione
$waLinkBase = "https://wa.me/" . $phone;

// Sostituisci il placeholder con il numero del mittente
$message = str_replace('{{SENDER_PHONE}}', $senderPhone, $messageTemplate);

// URL corrente della pagina
$currentUrl = (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? "https" : "http") . "://$_SERVER[HTTP_HOST]$_SERVER[REQUEST_URI]";
$baseUrl = strtok($currentUrl, '?');

// Genera diversi tipi di link
$qrUrlForm = $baseUrl . '?from=';
$qrUrlWhatsApp = "https://wa.me/?text=" . urlencode("Registrami con questo link: " . $baseUrl . "?from=NUMERO");

if ($_SERVER['REQUEST_METHOD'] === 'GET' && !isset($_GET['send'])) {
    ?>
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Sistema di Benvenuto WhatsApp</title>
        <style>
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                display: flex;
                justify-content: center;
                align-items: center;
                margin: 0;
                padding: 20px;
            }
            .container {
                background: white;
                border-radius: 20px;
                padding: 40px;
                max-width: 700px;
                width: 100%;
                box-shadow: 0 20px 60px rgba(0,0,0,0.3);
                text-align: center;
            }
            .logo {
                font-size: 60px;
                margin-bottom: 20px;
            }
            h1 {
                color: #333;
                margin-bottom: 20px;
                font-size: 28px;
            }
            .button {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                border: none;
                padding: 15px 30px;
                border-radius: 10px;
                font-size: 18px;
                font-weight: bold;
                cursor: pointer;
                margin: 10px;
                transition: transform 0.2s;
                text-decoration: none;
                display: inline-block;
            }
            .button:hover {
                transform: scale(1.05);
            }
            .button.whatsapp {
                background: linear-gradient(135deg, #25D366 0%, #128C7E 100%);
            }
            .message-preview {
                background: #f8f9fa;
                border-radius: 15px;
                padding: 20px;
                margin: 20px 0;
                text-align: left;
                border-left: 4px solid #667eea;
            }
            .message-preview h3 {
                color: #667eea;
                margin-bottom: 10px;
                font-size: 14px;
                text-transform: uppercase;
            }
            .phone-input {
                width: 100%;
                padding: 15px;
                border: 2px solid #e0e0e0;
                border-radius: 10px;
                font-size: 16px;
                margin: 20px 0;
                transition: border-color 0.3s;
            }
            .phone-input:focus {
                outline: none;
                border-color: #667eea;
            }
            .qr-section {
                background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
                border-radius: 15px;
                padding: 30px;
                margin: 30px 0;
            }
            .qr-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                gap: 20px;
                margin-top: 20px;
            }
            .qr-item {
                background: white;
                padding: 15px;
                border-radius: 10px;
                box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            }
            .qr-code {
                background: white;
                padding: 10px;
                border-radius: 10px;
                display: inline-block;
            }
            .qr-code img {
                max-width: 150px;
                height: auto;
            }
            .info-text {
                color: #666;
                font-size: 14px;
                margin-top: 15px;
                line-height: 1.6;
            }
            .success-message {
                background: #d4edda;
                color: #155724;
                border: 1px solid #c3e6cb;
                padding: 15px;
                border-radius: 10px;
                margin: 20px 0;
            }
            .error-message {
                background: #f8d7da;
                color: #721c24;
                border: 1px solid #f5c6cb;
                padding: 15px;
                border-radius: 10px;
                margin: 20px 0;
            }
            .divider {
                margin: 30px 0;
                height: 1px;
                background: linear-gradient(to right, transparent, #e0e0e0, transparent);
            }
            .feature-box {
                background: #f0f7ff;
                border: 2px solid #667eea;
                border-radius: 10px;
                padding: 15px;
                margin: 20px 0;
            }
            .auto-detect {
                background: #fff3cd;
                border: 2px solid #ffc107;
                border-radius: 10px;
                padding: 15px;
                margin: 20px 0;
            }
            .tabs {
                display: flex;
                justify-content: center;
                margin: 20px 0;
                border-bottom: 2px solid #e0e0e0;
            }
            .tab {
                padding: 10px 20px;
                cursor: pointer;
                border: none;
                background: none;
                font-size: 16px;
                color: #666;
                transition: all 0.3s;
            }
            .tab.active {
                color: #667eea;
                border-bottom: 3px solid #667eea;
                margin-bottom: -2px;
            }
            .tab-content {
                display: none;
            }
            .tab-content.active {
                display: block;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="logo">🎉</div>
            <h1>Sistema di Benvenuto WhatsApp</h1>
            
            <?php if ($isWhatsApp): ?>
                <div class="auto-detect">
                    <p><strong>📱 Rilevato accesso da WhatsApp!</strong></p>
                </div>
            <?php endif; ?>
            
            <?php if (empty($senderPhone)): ?>
                <!-- Mostra opzioni per catturare il numero -->
                
                <div class="tabs">
                    <button class="tab active" onclick="showTab('qr')">📱 QR Code</button>
                    <button class="tab" onclick="showTab('manual')">✍️ Manuale</button>
                    <button class="tab" onclick="showTab('whatsapp')">💬 WhatsApp</button>
                </div>
                
                <!-- Tab QR Code -->
                <div id="qr" class="tab-content active">
                    <div class="qr-section">
                        <h2 style="color: #667eea; margin-bottom: 20px;">📱 Scansiona per Registrarti</h2>
                        
                        <div class="qr-grid">
                            <div class="qr-item">
                                <h4 style="color: #667eea; margin-bottom: 10px;">Form Diretto</h4>
                                <div class="qr-code">
                                    <img src="https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=<?php echo urlencode($qrUrlForm); ?>" alt="QR Code Form">
                                </div>
                                <p style="font-size: 12px; color: #666; margin-top: 10px;">
                                    Apre il form di registrazione
                                </p>
                            </div>
                            
                            <div class="qr-item">
                                <h4 style="color: #25D366; margin-bottom: 10px;">Via WhatsApp</h4>
                                <div class="qr-code">
                                    <img src="https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=<?php echo urlencode($qrUrlWhatsApp); ?>" alt="QR Code WhatsApp">
                                </div>
                                <p style="font-size: 12px; color: #666; margin-top: 10px;">
                                    Invia link via WhatsApp
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Tab Manuale -->
                <div id="manual" class="tab-content">
                    <h3 style="color: #333; margin-bottom: 15px;">✍️ Inserisci il tuo numero manualmente</h3>
                    <form method="GET" onsubmit="return validatePhone()">
                        <input 
                            type="tel" 
                            name="from" 
                            id="phoneInput"
                            class="phone-input" 
                            placeholder="Inserisci il tuo numero (es: 3901234567)"
                            pattern="[0-9]{10,15}"
                            required
                        >
                        <button type="submit" class="button">
                            Procedi con la Registrazione
                        </button>
                    </form>
                </div>
                
                <!-- Tab WhatsApp -->
                <div id="whatsapp" class="tab-content">
                    <h3 style="color: #25D366; margin-bottom: 15px;">💬 Registrati via WhatsApp</h3>
                    
                    <a href="https://wa.me/<?php echo $phone; ?>?text=Registrami" class="button whatsapp">
                        Apri WhatsApp
                    </a>
                    
                    <p class="info-text" style="margin-top: 20px;">
                        Clicca il pulsante per aprire WhatsApp e inviare un messaggio di registrazione
                    </p>
                    
                    <!-- Deep link per mobile -->
                    <div style="margin-top: 20px;">
                        <a href="whatsapp://send?phone=<?php echo $phone; ?>&text=Registrami" class="button whatsapp">
                            Apri App WhatsApp (Mobile)
                        </a>
                    </div>
                </div>
                
                <div class="feature-box">
                    <h4 style="color: #667eea; margin-bottom: 10px;">📋 Come Funziona:</h4>
                    <ol style="text-align: left; color: #666; font-size: 14px;">
                        <li>Scegli il metodo di registrazione preferito</li>
                        <li>Il sistema rileverà automaticamente il tuo numero (dove possibile)</li>
                        <li>Conferma l'invio del messaggio di benvenuto</li>
                        <li>Ricevi automaticamente il messaggio su WhatsApp</li>
                    </ol>
                </div>
                
            <?php else: ?>
                <!-- Mostra conferma e invia messaggio -->
                <div style="background: #e8f5e9; padding: 15px; border-radius: 10px; margin-bottom: 20px;">
                    <p style="color: #2e7d32; font-weight: bold;">
                        📱 Numero registrante: <?php echo htmlspecialchars($senderPhone); ?>
                    </p>
                </div>
                
                <p style="color: #666; margin-bottom: 20px;">
                    Destinatario messaggio: <strong><?php echo $phone; ?></strong>
                </p>
                
                <div class="message-preview">
                    <h3>Messaggio che verrà inviato:</h3>
                    <p><?php echo nl2br(htmlspecialchars($message)); ?></p>
                </div>
                
                <form method="GET">
                    <input type="hidden" name="from" value="<?php echo htmlspecialchars($senderPhone); ?>">
                    <input type="hidden" name="send" value="1">
                    <button type="submit" class="button">
                        🚀 Invia Messaggio di Benvenuto
                    </button>
                </form>
                
                <a href="?" style="color: #667eea; text-decoration: none; display: inline-block; margin-top: 15px;">
                    ← Torna indietro
                </a>
            <?php endif; ?>
        </div>
        
        <script>
            // Auto-detect numero da localStorage
            window.onload = function() {
                // Prova a recuperare numero salvato
                const savedPhone = localStorage.getItem('userPhone');
                if (savedPhone && !<?php echo $senderPhone ? 'true' : 'false'; ?>) {
                    const phoneInput = document.getElementById('phoneInput');
                    if (phoneInput) {
                        phoneInput.value = savedPhone;
                    }
                }
                
                // Se siamo su mobile, mostra suggerimento WhatsApp
                if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
                    if (!<?php echo $senderPhone ? 'true' : 'false'; ?>) {
                        showTab('whatsapp');
                    }
                }
            };
            
            function showTab(tabName) {
                // Nascondi tutti i tab
                document.querySelectorAll('.tab-content').forEach(tab => {
                    tab.classList.remove('active');
                });
                document.querySelectorAll('.tab').forEach(tab => {
                    tab.classList.remove('active');
                });
                
                // Mostra tab selezionato
                document.getElementById(tabName).classList.add('active');
                event.target.classList.add('active');
            }
            
            function validatePhone() {
                const phone = document.getElementById('phoneInput').value;
                if (phone) {
                    // Salva numero in localStorage per futuri utilizzi
                    localStorage.setItem('userPhone', phone);
                    return true;
                }
                return false;
            }
            
            // Tentativo di rilevamento numero da API browser (richiede permessi)
            if ('contacts' in navigator && 'ContactsManager' in window) {
                // API Contacts disponibile (solo su alcuni browser/dispositivi)
                const getContacts = async () => {
                    try {
                        const props = ['tel'];
                        const opts = {multiple: false};
                        const contacts = await navigator.contacts.select(props, opts);
                        if (contacts.length > 0 && contacts[0].tel) {
                            const phone = contacts[0].tel[0].replace(/\D/g, '');
                            if (phone && !<?php echo $senderPhone ? 'true' : 'false'; ?>) {
                                window.location.href = '?from=' + phone;
                            }
                        }
                    } catch (ex) {
                        // Permesso negato o API non supportata
                    }
                };
            }
        </script>
    </body>
    </html>
    <?php
} else if (isset($_GET['send']) && $_GET['send'] == '1' && !empty($senderPhone)) {
    // Esegui invio messaggio
    $url = "https://api.Mail2Wa.it/?action=send&apiKey=" . $apiKey;
    $data = json_encode([
        'to' => $phone,
        'message' => $message
    ]);
    
    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
    curl_setopt($ch, CURLOPT_HTTPHEADER, ['Content-Type: application/json']);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    
    $result = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    ?>
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Messaggio Inviato</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                display: flex;
                justify-content: center;
                align-items: center;
                margin: 0;
                padding: 20px;
            }
            .container {
                background: white;
                border-radius: 20px;
                padding: 40px;
                max-width: 500px;
                width: 100%;
                box-shadow: 0 20px 60px rgba(0,0,0,0.3);
                text-align: center;
            }
            .success-icon {
                font-size: 80px;
                margin-bottom: 20px;
            }
            .button {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                border: none;
                padding: 15px 30px;
                border-radius: 10px;
                font-size: 16px;
                font-weight: bold;
                cursor: pointer;
                margin-top: 20px;
                text-decoration: none;
                display: inline-block;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <?php if ($httpCode == 200 || strpos($result, 'success') !== false): ?>
                <div class="success-icon">✅</div>
                <h1 style="color: #28a745;">Messaggio Inviato con Successo!</h1>
                <p style="color: #666; margin: 20px 0;">
                    Il messaggio di benvenuto è stato inviato a:<br>
                    <strong><?php echo htmlspecialchars($phone); ?></strong>
                </p>
                <p style="color: #666; background: #f8f9fa; padding: 15px; border-radius: 10px;">
                    Numero registrato: <strong><?php echo htmlspecialchars($senderPhone); ?></strong>
                </p>
                
                <script>
                    // Salva numero per future registrazioni
                    localStorage.setItem('userPhone', '<?php echo htmlspecialchars($senderPhone); ?>');
                </script>
            <?php else: ?>
                <div class="success-icon">❌</div>
                <h1 style="color: #dc3545;">Errore nell'invio</h1>
                <p style="color: #666; margin: 20px 0;">
                    Si è verificato un errore durante l'invio del messaggio.
                </p>
                <p style="color: #721c24; background: #f8d7da; padding: 15px; border-radius: 10px;">
                    <?php echo htmlspecialchars($result); ?>
                </p>
            <?php endif; ?>
            
            <a href="?" class="button">
                🔄 Nuova Registrazione
            </a>
        </div>
    </body>
    </html>
    <?php
}
?>


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
FILE: send-welcome.php_
SIZE: 12.24 KB
MODIFIED: 2025-08-12 20:19:48
--------------------------------------------------------------------------------
<?php
// Salva questo file come send-welcome.php sul tuo server

header('Access-Control-Allow-Origin: *');
header('Content-Type: text/html; charset=UTF-8');

$apiKey = '1f06d5c8bd0cd19f7c99b660b504bb25';
$phone = '393511845192';
$messageTemplate = '🎉 Benvenuto! Grazie per esserti registrato al nostro servizio. Il tuo numero {{SENDER_PHONE}} è stato registrato con successo.';

// Ottieni il numero del mittente dal parametro GET (se presente)
$senderPhone = isset($_GET['from']) ? $_GET['from'] : '';

// Sostituisci il placeholder con il numero del mittente
$message = str_replace('{{SENDER_PHONE}}', $senderPhone, $messageTemplate);

// URL corrente della pagina
$currentUrl = (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? "https" : "http") . "://$_SERVER[HTTP_HOST]$_SERVER[REQUEST_URI]";
// Rimuovi eventuali parametri esistenti e aggiungi il form
$baseUrl = strtok($currentUrl, '?');
$qrUrl = $baseUrl . '?from=';

if ($_SERVER['REQUEST_METHOD'] === 'GET' && !isset($_GET['send'])) {
    // Mostra pagina di conferma con QR Code
    ?>
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Invio Messaggio di Benvenuto</title>
        <style>
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                display: flex;
                justify-content: center;
                align-items: center;
                margin: 0;
                padding: 20px;
            }
            .container {
                background: white;
                border-radius: 20px;
                padding: 40px;
                max-width: 600px;
                width: 100%;
                box-shadow: 0 20px 60px rgba(0,0,0,0.3);
                text-align: center;
            }
            .logo {
                font-size: 60px;
                margin-bottom: 20px;
            }
            h1 {
                color: #333;
                margin-bottom: 20px;
                font-size: 28px;
            }
            .button {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                border: none;
                padding: 15px 30px;
                border-radius: 10px;
                font-size: 18px;
                font-weight: bold;
                cursor: pointer;
                margin-top: 20px;
                transition: transform 0.2s;
                text-decoration: none;
                display: inline-block;
            }
            .button:hover {
                transform: scale(1.05);
            }
            .message-preview {
                background: #f8f9fa;
                border-radius: 15px;
                padding: 20px;
                margin: 20px 0;
                text-align: left;
                border-left: 4px solid #667eea;
            }
            .message-preview h3 {
                color: #667eea;
                margin-bottom: 10px;
                font-size: 14px;
                text-transform: uppercase;
            }
            .phone-input {
                width: 100%;
                padding: 15px;
                border: 2px solid #e0e0e0;
border-radius: 10px;
                font-size: 16px;
                margin: 20px 0;
                transition: border-color 0.3s;
            }
            .phone-input:focus {
                outline: none;
                border-color: #667eea;
            }
            .qr-section {
                background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
                border-radius: 15px;
                padding: 30px;
                margin: 30px 0;
            }
            .qr-code {
                background: white;
                padding: 20px;
                border-radius: 10px;
                display: inline-block;
                box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            }
            .info-text {
                color: #666;
                font-size: 14px;
                margin-top: 15px;
                line-height: 1.6;
            }
            .success-message {
                background: #d4edda;
                color: #155724;
                border: 1px solid #c3e6cb;
                padding: 15px;
                border-radius: 10px;
                margin: 20px 0;
            }
            .error-message {
                background: #f8d7da;
                color: #721c24;
                border: 1px solid #f5c6cb;
                padding: 15px;
                border-radius: 10px;
                margin: 20px 0;
            }
            .divider {
                margin: 30px 0;
                height: 1px;
                background: linear-gradient(to right, transparent, #e0e0e0, transparent);
            }
            .feature-box {
                background: #f0f7ff;
                border: 2px solid #667eea;
                border-radius: 10px;
                padding: 15px;
                margin: 20px 0;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="logo">🎉</div>
            <h1>Sistema di Benvenuto WhatsApp</h1>
            
            <?php if (empty($senderPhone)): ?>
                <!-- Mostra QR Code per far compilare il form -->
                <div class="qr-section">
                    <h2 style="color: #667eea; margin-bottom: 20px;">📱 Scansiona per Registrarti</h2>
                    <div class="qr-code">
                        <img src="https://api.qrserver.com/v1/create-qr-code/?size=250x250&data=<?php echo urlencode($qrUrl); ?>" alt="QR Code">
                    </div>
                    <p class="info-text">
                        <strong>Scansiona questo QR Code con il tuo telefono</strong><br>
                        Verrai reindirizzato al form di registrazione dove potrai inserire il tuo numero
                    </p>
                </div>
                
                <div class="divider"></div>
                
                <h3 style="color: #333; margin-bottom: 15px;">✍️ Oppure inserisci il tuo numero qui:</h3>
                <form method="GET">
                    <input 
                        type="tel" 
                        name="from" 
                        class="phone-input" 
                        placeholder="Inserisci il tuo numero (es: 3901234567)"
                        pattern="[0-9]{10,15}"
                        required
                    >
                    <button type="submit" class="button">
                        Procedi con la Registrazione
                    </button>
                </form>
                
                <div class="feature-box">
                    <h4 style="color: #667eea; margin-bottom: 10px;">📋 Come Funziona:</h4>
                    <ol style="text-align: left; color: #666; font-size: 14px;">
                        <li>Scansiona il QR Code o inserisci il tuo numero</li>
                        <li>Conferma l'invio del messaggio di benvenuto</li>
                        <li>Ricevi automaticamente il messaggio su WhatsApp</li>
                    </ol>
                </div>
                
            <?php else: ?>
                <!-- Mostra conferma e invia messaggio -->
                <div style="background: #e8f5e9; padding: 15px; border-radius: 10px; margin-bottom: 20px;">
                    <p style="color: #2e7d32; font-weight: bold;">
                        📱 Numero registrante: <?php echo htmlspecialchars($senderPhone); ?>
                    </p>
                </div>
                
                <p style="color: #666; margin-bottom: 20px;">
                    Destinatario messaggio: <strong><?php echo $phone; ?></strong>
                </p>
                
                <div class="message-preview">
                    <h3>Messaggio che verrà inviato:</h3>
                    <p><?php echo nl2br(htmlspecialchars($message)); ?></p>
                </div>
                
                <form method="GET">
                    <input type="hidden" name="from" value="<?php echo htmlspecialchars($senderPhone); ?>">
                    <input type="hidden" name="send" value="1">
                    <button type="submit" class="button">
                        🚀 Invia Messaggio di Benvenuto
                    </button>
                </form>
                
                <a href="?" style="color: #667eea; text-decoration: none; display: inline-block; margin-top: 15px;">
                    ← Torna al QR Code
                </a>
            <?php endif; ?>
        </div>
    </body>
    </html>
    <?php
} else if (isset($_GET['send']) && $_GET['send'] == '1' && !empty($senderPhone)) {
    // Esegui invio messaggio
    $url = "https://api.Mail2Wa.it/?action=send&apiKey=" . $apiKey;
    $data = json_encode([
        'to' => $phone,
        'message' => $message
    ]);
    
    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
    curl_setopt($ch, CURLOPT_HTTPHEADER, ['Content-Type: application/json']);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    
    $result = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    ?>
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Messaggio Inviato</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                display: flex;
                justify-content: center;
                align-items: center;
                margin: 0;
                padding: 20px;
            }
            .container {
                background: white;
                border-radius: 20px;
                padding: 40px;
                max-width: 500px;
                width: 100%;
                box-shadow: 0 20px 60px rgba(0,0,0,0.3);
                text-align: center;
            }
            .success-icon {
                font-size: 80px;
                margin-bottom: 20px;
            }
            .button {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                border: none;
                padding: 15px 30px;
                border-radius: 10px;
                font-size: 16px;
                font-weight: bold;
                cursor: pointer;
                margin-top: 20px;
                text-decoration: none;
                display: inline-block;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <?php if ($httpCode == 200 || strpos($result, 'success') !== false): ?>
                <div class="success-icon">✅</div>
                <h1 style="color: #28a745;">Messaggio Inviato con Successo!</h1>
                <p style="color: #666; margin: 20px 0;">
                    Il messaggio di benvenuto è stato inviato a:<br>
                    <strong><?php echo htmlspecialchars($phone); ?></strong>
                </p>
                <p style="color: #666; background: #f8f9fa; padding: 15px; border-radius: 10px;">
                    Numero registrato: <strong><?php echo htmlspecialchars($senderPhone); ?></strong>
                </p>
            <?php else: ?>
                <div class="success-icon">❌</div>
                <h1 style="color: #dc3545;">Errore nell'invio</h1>
                <p style="color: #666; margin: 20px 0;">
                    Si è verificato un errore durante l'invio del messaggio.
                </p>
                <p style="color: #721c24; background: #f8d7da; padding: 15px; border-radius: 10px;">
                    <?php echo htmlspecialchars($result); ?>
                </p>
            <?php endif; ?>
            
            <a href="?" class="button">
                🔄 Nuova Registrazione
            </a>
        </div>
    </body>
    </html>
    <?php
}
?>

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
FILE: send_log.json
SIZE: 2.32 KB
MODIFIED: 2025-08-18 17:37:59
--------------------------------------------------------------------------------
[
    {
        "timestamp": "2025-08-12 23:20:37",
        "sender": "393355366950",
        "recipient": "393511845192",
        "message": "\u2705 La tua richiesta \u00e8 stata confermata. Mittente: 393355366950, Destinatario: 393511845192",
        "status": "success",
        "response": "{\"success\":true,\"message\":\"Message sent successfully\"}"
    },
    {
        "timestamp": "2025-08-12 23:26:41",
        "sender": "",
        "recipient": "3355366950",
        "message": "\u2705 La tua richiesta \u00e8 stata confermata. Mittente: Non specificato, Destinatario: 3355366950",
        "status": "success",
        "response": "{\"success\":true,\"message\":\"Message sent successfully\"}"
    },
    {
        "timestamp": "2025-08-12 23:27:44",
        "sender": "",
        "recipient": "3355366950",
        "message": "\ud83d\udce2 Hai ricevuto un nuovo messaggio da Non specificato",
        "status": "success",
        "response": "{\"success\":true,\"message\":\"Message sent successfully\"}"
    },
    {
        "timestamp": "2025-08-12 23:29:25",
        "sender": "393511845192",
        "recipient": "393355366950",
        "message": "\u2705 La tua richiesta \u00e8 stata confermata. Mittente: 393511845192, Destinatario: 393355366950",
        "status": "success",
        "response": "{\"success\":true,\"message\":\"Message sent successfully\"}"
    },
    {
        "timestamp": "2025-08-12 23:31:42",
        "sender": "",
        "recipient": "393355366950",
        "message": "\u2705 La tua richiesta \u00e8 stata confermata. Mittente: Non specificato, Destinatario: 393355366950",
        "status": "success",
        "response": "{\"success\":true,\"message\":\"Message sent successfully\"}"
    },
    {
        "timestamp": "2025-08-12 23:46:02",
        "sender": "",
        "recipient": "393355366950",
        "message": "\ud83d\udce2 Hai ricevuto un nuovo messaggio da Non specificato",
        "status": "success",
        "response": "{\"success\":true,\"message\":\"Message sent successfully\"}"
    },
    {
        "timestamp": "2025-08-18 17:37:59",
        "sender": "393511845192",
        "recipient": "393355366950",
        "message": "\ud83d\udce2 Hai ricevuto un nuovo messaggio da 393511845192",
        "status": "success",
        "response": "{\"success\":true,\"message\":\"Message sent successfully\"}"
    }
]

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
FILE: test-extraction.php
SIZE: 1.6 KB
MODIFIED: 2025-08-12 23:43:45
--------------------------------------------------------------------------------
<?php
/**
 * Test Extraction - Verifica estrazione numeri
 */

// Simula l'email che hai ricevuto
$test_email = [
    'subject' => 'Nel testo é possibile inserire i seguenti Token: alberto ferrante, 120363351772645764@g.us Es: Messaggi ricevuti su WhatsApp: alberto ferrante - 120363351772645764@g.us',
    'body' => '2025-08-12 10:37:45: Che siete sempre operativi😂, alberto ferrante, 120363351772645764@g.us'
];

echo "<h1>Test Estrazione Numero WhatsApp</h1>";
echo "<pre>";
echo "Subject: " . $test_email['subject'] . "\n\n";

// Test pattern 1: nome, numero@g.us
if (preg_match('/([^,\-]+)[,\s\-]+(\d{10,15})@[gc]\.us/i', $test_email['subject'], $matches)) {
    echo "✅ TROVATO!\n";
    echo "Nome: " . trim($matches[1]) . "\n";
    echo "Numero: " . $matches[2] . "\n";
} else {
    echo "❌ Pattern 1 non trovato\n";
}

echo "\n--- Test alternativo ---\n";

// Test pattern 2: solo numero
if (preg_match('/(\d{10,15})@[gc]\.us/i', $test_email['subject'], $matches)) {
    echo "✅ Numero trovato: " . $matches[1] . "\n";
}

echo "</pre>";

// Crea file di test
$storage_file = __DIR__ . '/whatsapp_numbers.json';
$test_db = [
    '120363351772645764' => [
        'number' => '120363351772645764',
        'name' => 'alberto ferrante',
        'first_seen' => date('Y-m-d H:i:s'),
        'last_seen' => date('Y-m-d H:i:s'),
        'messages' => 1,
        'source' => 'test'
    ]
];

file_put_contents($storage_file, json_encode($test_db, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE));

echo "<h2>✅ File whatsapp_numbers.json creato con successo!</h2>";
echo "<pre>" . file_get_contents($storage_file) . "</pre>";
?>


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
FILE: webhook-receiver.php
SIZE: 10.72 KB
MODIFIED: 2025-08-12 23:41:47
--------------------------------------------------------------------------------
<?php
/**
 * WebHook Receiver per wa2mail
 * Riceve e processa i messaggi da Mail2Wa
 */

header('Content-Type: application/json');
header('Access-Control-Allow-Origin: *');

// File di storage
$storage_file = __DIR__ . '/whatsapp_numbers.json';
$debug_log = __DIR__ . '/webhook_debug.log';

// Funzione di debug
function debugLog($message) {
    global $debug_log;
    $timestamp = date('Y-m-d H:i:s');
    file_put_contents($debug_log, "[$timestamp] $message\n", FILE_APPEND);
}

// Log tutti i dati ricevuti per debug
debugLog("=== NUOVO WEBHOOK RICEVUTO ===");
debugLog("Method: " . $_SERVER['REQUEST_METHOD']);
debugLog("Headers: " . json_encode(getallheaders()));

// Ricevi i dati dal webhook (può arrivare come POST o come email forward)
$input_raw = file_get_contents('php://input');
debugLog("Raw Input: " . $input_raw);

// Prova a decodificare come JSON
$data = json_decode($input_raw, true);

// Se non è JSON, potrebbe essere form data
if (!$data && $_POST) {
    $data = $_POST;
    debugLog("POST Data: " . json_encode($_POST));
}

// Se non è neanche POST, controlla GET per test
if (!$data && $_GET) {
    $data = $_GET;
    debugLog("GET Data: " . json_encode($_GET));
}

// Processa i dati ricevuti
if ($data) {
    $number = '';
    $name = '';
    $message_text = '';
    
    // Estrai informazioni basandosi su diversi formati possibili
    
    // Formato 1: wa2mail standard
    if (isset($data['from'])) {
        // Estrai numero dal campo 'from'
        if (preg_match('/(\d{10,15})/', $data['from'], $matches)) {
            $number = $matches[1];
        }
    }
    
    // Formato 2: Email forward con subject
    if (isset($data['subject'])) {
        // Pattern: "Nome, numero@g.us" o simili
        if (preg_match('/([^,\-]+)[,\s\-]+(\d{10,15})@[gc]\.us/i', $data['subject'], $matches)) {
            $name = trim($matches[1]);
            $number = $matches[2];
        } elseif (preg_match('/(\d{10,15})@[gc]\.us/i', $data['subject'], $matches)) {
            $number = $matches[1];
        }
    }
    
    // Formato 3: Body dell'email
    if (isset($data['body']) || isset($data['text']) || isset($data['message'])) {
        $body = $data['body'] ?? $data['text'] ?? $data['message'] ?? '';
        
        // Cerca numero nel body
        if (preg_match('/(\d{10,15})@[gc]\.us/i', $body, $matches)) {
            $number = $matches[1];
        }
        
        // Estrai anche il messaggio
        $message_text = strip_tags($body);
    }
    
    // Formato 4: Campi diretti WhatsApp
    if (isset($data['phone'])) {
        $number = preg_replace('/\D/', '', $data['phone']);
    }
    if (isset($data['sender'])) {
        $number = preg_replace('/\D/', '', $data['sender']);
    }
    
    debugLog("Extracted - Number: $number, Name: $name");
    
    // Se abbiamo trovato un numero, salvalo
    if ($number) {
        // Carica database esistente
        $database = [];
        if (file_exists($storage_file)) {
            $content = file_get_contents($storage_file);
            $database = json_decode($content, true) ?: [];
        }
        
        // Aggiungi o aggiorna entry
        if (!isset($database[$number])) {
            $database[$number] = [
                'number' => $number,
                'name' => $name ?: 'Sconosciuto',
                'first_seen' => date('Y-m-d H:i:s'),
                'last_seen' => date('Y-m-d H:i:s'),
                'messages' => 1,
                'last_message' => substr($message_text, 0, 200)
            ];
            debugLog("NEW number registered: $number");
            
            // Invia messaggio di benvenuto automatico
            sendWelcomeMessage($number, $name);
        } else {
            // Aggiorna info esistente
            $database[$number]['last_seen'] = date('Y-m-d H:i:s');
            $database[$number]['messages'] = ($database[$number]['messages'] ?? 0) + 1;
            $database[$number]['last_message'] = substr($message_text, 0, 200);
            if ($name && empty($database[$number]['name'])) {
                $database[$number]['name'] = $name;
            }
            debugLog("UPDATED number: $number");
        }
        
        // Salva database
        file_put_contents($storage_file, json_encode($database, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE));
        debugLog("Database saved successfully");
        
        // Risposta di successo
        echo json_encode([
            'status' => 'success',
            'number' => $number,
            'name' => $name,
            'total_numbers' => count($database)
        ]);
    } else {
        debugLog("No number found in webhook data");
        echo json_encode([
            'status' => 'warning',
            'message' => 'No phone number found in data'
        ]);
    }
} else {
    debugLog("No data received");
    echo json_encode([
        'status' => 'error',
        'message' => 'No data received'
    ]);
}

// Funzione per inviare messaggio di benvenuto
function sendWelcomeMessage($number, $name = '') {
    $apiKey = '1f06d5c8bd0cd19f7c99b660b504bb25';
    
    $welcomeMessage = "🎉 Ciao " . ($name ?: 'amico') . "!\n\n";
    $welcomeMessage .= "Benvenuto nel nostro sistema di messaggistica WhatsApp.\n";
    $welcomeMessage .= "Il tuo numero " . $number . " è stato registrato con successo.\n\n";
    $welcomeMessage .= "Da ora riceverai aggiornamenti e comunicazioni importanti su questo numero.\n\n";
    $welcomeMessage .= "Grazie per averci contattato! 🙏";
    
    $url = "https://api.Mail2Wa.it/?action=send&apiKey=" . $apiKey;
    $data = json_encode([
        'to' => $number,
        'message' => $welcomeMessage
    ]);
    
    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
    curl_setopt($ch, CURLOPT_HTTPHEADER, ['Content-Type: application/json']);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_TIMEOUT, 10);
    
    $result = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    debugLog("Welcome message sent to $number - Status: $httpCode");
    
    return $httpCode == 200;
}

// Se chiamato direttamente via browser, mostra info
if ($_SERVER['REQUEST_METHOD'] === 'GET' && !isset($_GET['test'])) {
    ?>
    <!DOCTYPE html>
    <html>
    <head>
        <title>WebHook Receiver Status</title>
        <meta charset="UTF-8">
        <style>
            body {
                font-family: Arial, sans-serif;
                max-width: 800px;
                margin: 50px auto;
                padding: 20px;
                background: #f5f5f5;
            }
            .status {
                background: white;
                padding: 20px;
                border-radius: 10px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            }
            .success { color: green; }
            .error { color: red; }
            code {
                background: #f0f0f0;
                padding: 2px 5px;
                border-radius: 3px;
            }
            pre {
                background: #263238;
                color: #aed581;
                padding: 15px;
                border-radius: 5px;
                overflow-x: auto;
            }
        </style>
    </head>
    <body>
        <div class="status">
            <h1>📡 WebHook Receiver per wa2mail</h1>
            
            <?php
            $db_exists = file_exists($storage_file);
            $database = [];
            if ($db_exists) {
                $database = json_decode(file_get_contents($storage_file), true) ?: [];
            }
            ?>
            
            <p class="<?php echo $db_exists ? 'success' : 'error'; ?>">
                <strong>Database Status:</strong> 
                <?php echo $db_exists ? '✅ Attivo' : '❌ Non ancora creato'; ?>
            </p>
            
            <?php if ($db_exists): ?>
                <p><strong>Numeri registrati:</strong> <?php echo count($database); ?></p>
                
                <?php if (count($database) > 0): ?>
                    <h3>Ultimi numeri registrati:</h3>
                    <ul>
                        <?php 
                        $recent = array_slice($database, -5, 5, true);
                        foreach ($recent as $num => $info): 
                        ?>
                            <li>
                                <strong><?php echo $info['name'] ?? 'Sconosciuto'; ?></strong> - 
                                <?php echo $num; ?> 
                                (<?php echo $info['messages'] ?? 1; ?> messaggi, 
                                ultimo: <?php echo $info['last_seen'] ?? 'N/A'; ?>)
                            </li>
                        <?php endforeach; ?>
                    </ul>
                <?php endif; ?>
            <?php endif; ?>
            
            <h3>🔧 Configurazione WebHook in Mail2Wa:</h3>
            <ol>
                <li>Accedi al pannello Mail2Wa</li>
                <li>Vai su "Configurazione WebHooks"</li>
                <li>Inserisci questo URL:
                    <code><?php echo (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? "https" : "http") . "://$_SERVER[HTTP_HOST]$_SERVER[REQUEST_URI]"; ?></code>
                </li>
                <li>Salva la configurazione</li>
            </ol>
            
            <h3>📧 Test Manuale con Email Forward:</h3>
            <p>Se wa2mail invia email invece di webhook, puoi configurare un forward automatico verso uno script che chiama questo webhook.</p>
            
            <h3>🧪 Test Webhook:</h3>
            <pre>curl -X POST "<?php echo (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? "https" : "http") . "://$_SERVER[HTTP_HOST]$_SERVER[REQUEST_URI]"; ?>" \
  -H "Content-Type: application/json" \
  -d '{
    "subject": "Test User, 3901234567@c.us",
    "body": "Messaggio di test",
    "from": "3901234567"
  }'</pre>
            
            <?php if (file_exists($debug_log)): ?>
                <h3>📝 Ultimi log di debug:</h3>
                <pre><?php 
                    $logs = file_get_contents($debug_log);
                    $lines = explode("\n", $logs);
                    echo htmlspecialchars(implode("\n", array_slice($lines, -20)));
                ?></pre>
            <?php endif; ?>
        </div>
    </body>
    </html>
    <?php
}

// Test endpoint
if (isset($_GET['test'])) {
    // Simula un webhook per test
    $test_data = [
        'subject' => 'Test User, 390' . rand(1000000, 9999999) . '@c.us',
        'body' => 'Questo è un messaggio di test',
        'from' => '390' . rand(1000000, 9999999)
    ];
    
    debugLog("TEST MODE ACTIVATED");
    
    // Processa come se fosse un vero webhook
    $_POST = $test_data;
    $data = $test_data;
    
    echo json_encode([
        'status' => 'test_completed',
        'data' => $test_data
    ]);
}
?>


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
FILE: webhook_debug.log
SIZE: 166.95 MB
MODIFIED: 2025-08-18 17:38:53
--------------------------------------------------------------------------------
[BINARY FILE OR TOO LARGE - CONTENT SKIPPED]

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
FILE: whatsapp_numbers.json
SIZE: 3.94 KB
MODIFIED: 2025-08-18 17:38:53
--------------------------------------------------------------------------------
{
    "120363351772645764": {
        "number": "120363351772645764",
        "name": "alberto ferrante",
        "first_seen": "2025-08-12 23:58:00",
        "last_seen": "2025-08-18 17:04:45",
        "messages": 53,
        "source": "test",
        "last_message": ""
    },
    "393511845192": {
        "number": "393511845192",
        "name": "Sconosciuto",
        "first_seen": "2025-08-13 00:27:54",
        "last_seen": "2025-08-17 17:37:32",
        "messages": 5,
        "last_message": "",
        "last_subject": "Nel testo é possibile inserire i seguenti Token: alberto ferrante, 393511845192 Es: Messaggi ricev"
    },
    "393335344305": {
        "number": "393335344305",
        "name": "Sconosciuto",
        "first_seen": "2025-08-13 00:34:23",
        "last_seen": "2025-08-17 17:48:43",
        "messages": 3,
        "last_message": ""
    },
    "120363170437604043": {
        "number": "120363170437604043",
        "name": "Sconosciuto",
        "first_seen": "2025-08-13 06:19:20",
        "last_seen": "2025-08-18 17:38:53",
        "messages": 97,
        "last_message": ""
    },
    "120363237542075392": {
        "number": "120363237542075392",
        "name": "Sconosciuto",
        "first_seen": "2025-08-13 07:53:06",
        "last_seen": "2025-08-18 09:59:44",
        "messages": 13,
        "last_message": ""
    },
    "120363314445631520": {
        "number": "120363314445631520",
        "name": "Sconosciuto",
        "first_seen": "2025-08-13 08:00:42",
        "last_seen": "2025-08-18 13:04:43",
        "messages": 16,
        "last_message": ""
    },
    "393391794473": {
        "number": "393391794473",
        "name": "Sconosciuto",
        "first_seen": "2025-08-13 08:34:33",
        "last_seen": "2025-08-18 08:41:29",
        "messages": 11,
        "last_message": ""
    },
    "120363397729588278": {
        "number": "120363397729588278",
        "name": "Sconosciuto",
        "first_seen": "2025-08-13 09:43:09",
        "last_seen": "2025-08-18 17:03:41",
        "messages": 83,
        "last_message": ""
    },
    "120363171745927792": {
        "number": "120363171745927792",
        "name": "Sconosciuto",
        "first_seen": "2025-08-13 10:15:55",
        "last_seen": "2025-08-18 16:02:52",
        "messages": 19,
        "last_message": ""
    },
    "393385800056": {
        "number": "393385800056",
        "name": "Sconosciuto",
        "first_seen": "2025-08-13 10:44:59",
        "last_seen": "2025-08-14 11:37:17",
        "messages": 2,
        "last_message": ""
    },
    "346178860321505902026": {
        "number": "346178860321505902026",
        "name": "Sconosciuto",
        "first_seen": "2025-08-13 11:37:47",
        "last_seen": "2025-08-17 18:58:09",
        "messages": 51,
        "last_message": ""
    },
    "3933895178581448013984": {
        "number": "3933895178581448013984",
        "name": "Sconosciuto",
        "first_seen": "2025-08-14 08:39:11",
        "last_seen": "2025-08-16 18:04:38",
        "messages": 53,
        "last_message": ""
    },
    "393313196599": {
        "number": "393313196599",
        "name": "Sconosciuto",
        "first_seen": "2025-08-14 13:11:11",
        "last_seen": "2025-08-14 13:11:11",
        "messages": 1,
        "last_message": ""
    },
    "120363144038483540": {
        "number": "120363144038483540",
        "name": "Sconosciuto",
        "first_seen": "2025-08-14 15:53:57",
        "last_seen": "2025-08-18 14:32:54",
        "messages": 3,
        "last_message": ""
    },
    "120363156573064376": {
        "number": "120363156573064376",
        "name": "Sconosciuto",
        "first_seen": "2025-08-14 19:09:50",
        "last_seen": "2025-08-14 19:09:50",
        "messages": 1,
        "last_message": ""
    },
    "393493625844": {
        "number": "393493625844",
        "name": "Sconosciuto",
        "first_seen": "2025-08-18 17:29:41",
        "last_seen": "2025-08-18 17:29:41",
        "messages": 1,
        "last_message": ""
    }
}

--------------------------------------------------------------------------------


================================================================================
FINE DUMP - Generato da Plugin Dumper v1.0
================================================================================
